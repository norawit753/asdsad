[{"D:\\E-Service\\Client_E-Service\\src\\index.js":"1","D:\\E-Service\\Client_E-Service\\src\\reportWebVitals.js":"2","D:\\E-Service\\Client_E-Service\\src\\store.js":"3","D:\\E-Service\\Client_E-Service\\src\\App.js":"4","D:\\E-Service\\Client_E-Service\\src\\components\\main\\AppFooter.js":"5","D:\\E-Service\\Client_E-Service\\src\\components\\main\\AppNavbar.js":"6","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\main\\MainPage.js":"7","D:\\E-Service\\Client_E-Service\\src\\reducers\\index.js":"8","D:\\E-Service\\Client_E-Service\\src\\components\\main\\RegisterModal.js":"9","D:\\E-Service\\Client_E-Service\\src\\components\\main\\Logout.js":"10","D:\\E-Service\\Client_E-Service\\src\\components\\main\\Login.js":"11","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\main\\UserPage.js":"12","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\complaint\\MainPage.js":"13","D:\\E-Service\\Client_E-Service\\src\\components\\research\\Card.js":"14","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\Card.js":"15","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\MainPage.js":"16","D:\\E-Service\\Client_E-Service\\src\\actions\\main\\errorAction.js":"17","D:\\E-Service\\Client_E-Service\\src\\type\\main\\type.js":"18","D:\\E-Service\\Client_E-Service\\src\\actions\\main\\authAction.js":"19","D:\\E-Service\\Client_E-Service\\src\\actions\\main\\serviceAction.js":"20","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\index.js":"21","D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\index.js":"22","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\index.js":"23","D:\\E-Service\\Client_E-Service\\src\\actions\\main\\depAction.js":"24","D:\\E-Service\\Client_E-Service\\src\\actions\\main\\registerAction.js":"25","D:\\E-Service\\Client_E-Service\\src\\utilis\\config.js":"26","D:\\E-Service\\Client_E-Service\\src\\components\\main\\UserPage\\AdminActive.js":"27","D:\\E-Service\\Client_E-Service\\src\\components\\research\\MainTableUser.js":"28","D:\\E-Service\\Client_E-Service\\src\\components\\research\\MainTableAdmin.js":"29","D:\\E-Service\\Client_E-Service\\src\\components\\research\\MainTableCommittee.js":"30","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\EditPage.js":"31","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\DetailPage.js":"32","D:\\E-Service\\Client_E-Service\\src\\components\\main\\BackMainPage.js":"33","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\FormPage.js":"34","D:\\E-Service\\Client_E-Service\\src\\components\\research\\FormButton.js":"35","D:\\E-Service\\Client_E-Service\\src\\actions\\research\\listAction.js":"36","D:\\E-Service\\Client_E-Service\\src\\actions\\research\\registerAction.js":"37","D:\\E-Service\\Client_E-Service\\src\\actions\\research\\authAction.js":"38","D:\\E-Service\\Client_E-Service\\src\\utilis\\newLine.js":"39","D:\\E-Service\\Client_E-Service\\src\\components\\research\\TagsEdit.js":"40","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\depReducer.js":"41","D:\\E-Service\\Client_E-Service\\src\\components\\research\\UpdateStatusModal.js":"42","D:\\E-Service\\Client_E-Service\\src\\components\\research\\BackResearchPage.js":"43","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\listUserServiceReducer.js":"44","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\errorReducer.js":"45","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\serviceReducer.js":"46","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\triggerReducer.js":"47","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\authReducer.js":"48","D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\triggerReducer.js":"49","D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\listReducer.js":"50","D:\\E-Service\\Client_E-Service\\src\\actions\\research\\formAction.js":"51","D:\\E-Service\\Client_E-Service\\src\\components\\research\\Tags.js":"52","D:\\E-Service\\Client_E-Service\\src\\components\\main\\ServiceActive\\researchActive.js":"53","D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\formReducer.js":"54","D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\authReducer.js":"55","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\MainTableAdmin.js":"56","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\triggerReducer.js":"57","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\listReducer.js":"58","D:\\E-Service\\Client_E-Service\\src\\type\\research\\type.js":"59","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\logReducer.js":"60","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\authReducer.js":"61","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\complaint\\DetailPage.js":"62","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\MainTableUser.js":"63","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\FormButton.js":"64","D:\\E-Service\\Client_E-Service\\src\\components\\main\\UserPage\\AdminTable.js":"65","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\complaint\\FormPage.js":"66","D:\\E-Service\\Client_E-Service\\src\\utilis\\delay.js":"67","D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\authAction.js":"68","D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\listAction.js":"69","D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\registerAction.js":"70","D:\\E-Service\\Client_E-Service\\src\\type\\complaint\\type.js":"71","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\BackComplaintPage.js":"72","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\UpdateStatusModal.js":"73","D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\formAction.js":"74","D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\updateAction.js":"75"},{"size":663,"mtime":1619083344867,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1619083344874,"results":"78","hashOfConfig":"77"},{"size":1231,"mtime":1619083344875,"results":"79","hashOfConfig":"77"},{"size":3278,"mtime":1619083344850,"results":"80","hashOfConfig":"77"},{"size":1634,"mtime":1619083344860,"results":"81","hashOfConfig":"77"},{"size":5473,"mtime":1619083344860,"results":"82","hashOfConfig":"77"},{"size":2672,"mtime":1619083344855,"results":"83","hashOfConfig":"77"},{"size":308,"mtime":1619083344869,"results":"84","hashOfConfig":"77"},{"size":8090,"mtime":1619083344861,"results":"85","hashOfConfig":"77"},{"size":826,"mtime":1619083344860,"results":"86","hashOfConfig":"77"},{"size":5133,"mtime":1619083344860,"results":"87","hashOfConfig":"77"},{"size":7992,"mtime":1619083344856,"results":"88","hashOfConfig":"77"},{"size":5023,"mtime":1619083344855,"results":"89","hashOfConfig":"77"},{"size":1680,"mtime":1619083344863,"results":"90","hashOfConfig":"77"},{"size":1620,"mtime":1619083344858,"results":"91","hashOfConfig":"77"},{"size":6512,"mtime":1619083344857,"results":"92","hashOfConfig":"77"},{"size":873,"mtime":1619083344853,"results":"93","hashOfConfig":"77"},{"size":1125,"mtime":1619083344876,"results":"94","hashOfConfig":"77"},{"size":2851,"mtime":1619083344852,"results":"95","hashOfConfig":"77"},{"size":2963,"mtime":1619083344853,"results":"96","hashOfConfig":"77"},{"size":347,"mtime":1619083344868,"results":"97","hashOfConfig":"77"},{"size":351,"mtime":1619083344873,"results":"98","hashOfConfig":"77"},{"size":518,"mtime":1619083344870,"results":"99","hashOfConfig":"77"},{"size":492,"mtime":1619083344852,"results":"100","hashOfConfig":"77"},{"size":1894,"mtime":1619083344853,"results":"101","hashOfConfig":"77"},{"size":552,"mtime":1619620463359,"results":"102","hashOfConfig":"77"},{"size":2203,"mtime":1619083344862,"results":"103","hashOfConfig":"77"},{"size":5065,"mtime":1619083344864,"results":"104","hashOfConfig":"77"},{"size":6039,"mtime":1619083344863,"results":"105","hashOfConfig":"77"},{"size":6036,"mtime":1619083344863,"results":"106","hashOfConfig":"77"},{"size":6808,"mtime":1619083344856,"results":"107","hashOfConfig":"77"},{"size":8075,"mtime":1621429262077,"results":"108","hashOfConfig":"77"},{"size":695,"mtime":1619083344860,"results":"109","hashOfConfig":"77"},{"size":16739,"mtime":1621435275300,"results":"110","hashOfConfig":"77"},{"size":4430,"mtime":1619083344863,"results":"111","hashOfConfig":"77"},{"size":4302,"mtime":1619083344854,"results":"112","hashOfConfig":"77"},{"size":999,"mtime":1619083344854,"results":"113","hashOfConfig":"77"},{"size":1393,"mtime":1619083344853,"results":"114","hashOfConfig":"77"},{"size":191,"mtime":1619083344879,"results":"115","hashOfConfig":"77"},{"size":2456,"mtime":1619083344864,"results":"116","hashOfConfig":"77"},{"size":544,"mtime":1619083344870,"results":"117","hashOfConfig":"77"},{"size":6914,"mtime":1619083344865,"results":"118","hashOfConfig":"77"},{"size":736,"mtime":1619083344862,"results":"119","hashOfConfig":"77"},{"size":677,"mtime":1619083344871,"results":"120","hashOfConfig":"77"},{"size":733,"mtime":1619083344870,"results":"121","hashOfConfig":"77"},{"size":1364,"mtime":1619083344872,"results":"122","hashOfConfig":"77"},{"size":584,"mtime":1619083344872,"results":"123","hashOfConfig":"77"},{"size":5194,"mtime":1619083344869,"results":"124","hashOfConfig":"77"},{"size":816,"mtime":1619083344874,"results":"125","hashOfConfig":"77"},{"size":960,"mtime":1619083344874,"results":"126","hashOfConfig":"77"},{"size":2367,"mtime":1619268391684,"results":"127","hashOfConfig":"77"},{"size":2240,"mtime":1619083344864,"results":"128","hashOfConfig":"77"},{"size":8119,"mtime":1619622455057,"results":"129","hashOfConfig":"77"},{"size":989,"mtime":1619083344873,"results":"130","hashOfConfig":"77"},{"size":2119,"mtime":1619083344873,"results":"131","hashOfConfig":"77"},{"size":7639,"mtime":1619083344858,"results":"132","hashOfConfig":"77"},{"size":662,"mtime":1619083344869,"results":"133","hashOfConfig":"77"},{"size":935,"mtime":1619083344868,"results":"134","hashOfConfig":"77"},{"size":1110,"mtime":1619083344876,"results":"135","hashOfConfig":"77"},{"size":467,"mtime":1619083344869,"results":"136","hashOfConfig":"77"},{"size":2485,"mtime":1619083344868,"results":"137","hashOfConfig":"77"},{"size":5246,"mtime":1619083344855,"results":"138","hashOfConfig":"77"},{"size":7642,"mtime":1619083344859,"results":"139","hashOfConfig":"77"},{"size":4438,"mtime":1619083344858,"results":"140","hashOfConfig":"77"},{"size":4099,"mtime":1619083344862,"results":"141","hashOfConfig":"77"},{"size":13003,"mtime":1619083344855,"results":"142","hashOfConfig":"77"},{"size":128,"mtime":1619083344878,"results":"143","hashOfConfig":"77"},{"size":1361,"mtime":1619083344851,"results":"144","hashOfConfig":"77"},{"size":2054,"mtime":1619083344851,"results":"145","hashOfConfig":"77"},{"size":992,"mtime":1619083344851,"results":"146","hashOfConfig":"77"},{"size":1006,"mtime":1619083344876,"results":"147","hashOfConfig":"77"},{"size":751,"mtime":1619083344858,"results":"148","hashOfConfig":"77"},{"size":11792,"mtime":1619083344859,"results":"149","hashOfConfig":"77"},{"size":2860,"mtime":1619083344851,"results":"150","hashOfConfig":"77"},{"size":2170,"mtime":1619083344852,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"1g8mkd2",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"154"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"154"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"154"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"154"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"D:\\E-Service\\Client_E-Service\\src\\index.js",[],["326","327"],"D:\\E-Service\\Client_E-Service\\src\\reportWebVitals.js",[],"D:\\E-Service\\Client_E-Service\\src\\store.js",[],"D:\\E-Service\\Client_E-Service\\src\\App.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\main\\AppFooter.js",["328","329"],"import React from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport CookieConsent, { Cookies } from \"react-cookie-consent\";\r\n\r\nconst AppFooter = () => {\r\n  return (\r\n    <Row>\r\n      <div\r\n        className=\"fixed-bottom\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          verticalAlign: \"middle\",\r\n          backgroundColor: \"#ffcc00\",\r\n        }}\r\n      >\r\n        <p style={{ paddingTop: \"10px\" }}>\r\n          ฝ่ายเทคโนโลยี คณะวิทยาศาสตร์ มหาวิทยาลัยศรีนครินทรวิโรฒ\r\n        </p>\r\n        <CookieConsent\r\n          buttonClasses=\"btn btn-primary\"\r\n          location=\"bottom\"\r\n          contentClasses=\"text-capitalize\"\r\n          buttonText=\"ปิด\"\r\n        >\r\n          ทางคณะวิทยาศาสตร์มีการใช้งานคุกกี้ (Cookies)\r\n          เพื่อจัดการข้อมูลส่วนบุคคลและช่วยเพิ่มประสิทธิภาพการใช้งานเว็บไซต์\r\n          ท่านสามารถศึกษารายละเอียดเพิ่มเติมและการตั้งค่าคุกกี้ได้ที่{\" \"}\r\n          <a\r\n            href=\"http://science.swu.ac.th/Default.aspx?tabid=20330&language=th-TH\"\r\n            target=\"_blank\"\r\n          >\r\n            นโยบายการใช้คุ้กกี้\r\n          </a>\r\n        </CookieConsent>\r\n      </div>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\main\\AppNavbar.js",["330","331","332"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome, faList, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  Navbar,\r\n  NavLink,\r\n  Container,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { START_APP } from \"../../type/main/type\";\r\nimport RegisterModal from \"./RegisterModal\";\r\nimport Logout from \"./Logout\";\r\n\r\nimport { clearErrors } from \"../../actions/main/errorAction\";\r\nimport { loadUser } from \"../../actions/main/authAction\";\r\n\r\nconst AppNavbar = (props) => {\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [startClear, setstartClear] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const checkToken = useSelector((state) => state.main.auth.token);\r\n  const checkAuth = useSelector((state) => state.main.auth.isAuthenticated);\r\n  const nameUser = useSelector((state) => state.main.auth.user);\r\n\r\n  const toggle = () => {\r\n    setisOpen(!isOpen);\r\n  };\r\n\r\n  AppNavbar.prototypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    loadUser: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { clearErrors, loadUser } = props;\r\n\r\n  useEffect(() => {\r\n    if (!startClear) {\r\n      setstartClear(true);\r\n    }\r\n    if (startClear) {\r\n      clearErrors();\r\n      if (checkToken) {\r\n        loadUser();\r\n      }\r\n    }\r\n  }, [startClear]);\r\n\r\n  const GoUserPage = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"PAGE_LOADING\" });\r\n    props.history.push(\"/users\");\r\n  };\r\n\r\n  return (\r\n    <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5 fixed-top\">\r\n      <Container>\r\n        <NavbarBrand href=\"/\">ศูนย์บริการออนไลน์ คณะวิทยาศาสตร์</NavbarBrand>\r\n        <NavbarToggler onClick={toggle}></NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            {checkAuth ? (\r\n              <Fragment>\r\n                <NavLink href=\"/\">\r\n                  <span style={{ color: \"#dddddd\" }}>\r\n                    <FontAwesomeIcon icon={faHome} /> หน้าหลัก\r\n                  </span>\r\n                </NavLink>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    <span style={{ color: \"#dddddd\" }}>\r\n                      <FontAwesomeIcon icon={faUser} />\r\n                      {nameUser\r\n                        ? ` ${nameUser.title}${nameUser.firstname} ${nameUser.lastname}`\r\n                        : \"\"}\r\n                    </span>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem onClick={GoUserPage}>\r\n                      ข้อมูลส่วนตัว\r\n                    </DropdownItem>\r\n                    <Link to=\"/\">\r\n                      <DropdownItem divider />\r\n                      <Logout />\r\n                    </Link>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <NavLink href=\"/\">\r\n                  <span style={{ color: \"#dddddd\" }}>\r\n                    <FontAwesomeIcon icon={faHome} /> หน้าหลัก\r\n                  </span>\r\n                </NavLink>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    <span style={{ color: \"#dddddd\" }}>\r\n                      <FontAwesomeIcon icon={faList} /> เมนู\r\n                    </span>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <Link\r\n                      target=\"_blank\"\r\n                      to={{\r\n                        pathname:\r\n                          \"https://drive.google.com/file/d/1sUrsxEaoc_hPRHtklcw_DT2V3g1tUSFR/view?usp=sharing\",\r\n                      }}\r\n                    >\r\n                      <DropdownItem>คู่มือการใช้งาน</DropdownItem>\r\n                    </Link>\r\n                    <DropdownItem divider />\r\n                    <Link\r\n                      target=\"_blank\"\r\n                      to={{\r\n                        pathname:\r\n                          \"https://docs.google.com/forms/d/1tbjiWIM5TL8K-c90AllvmfpgnJTLp1AE5j7bdzJmj84/edit?usp=sharing\",\r\n                      }}\r\n                    >\r\n                      <DropdownItem>\r\n                        แจ้งร้องเรียน\r\n                        <br />\r\n                        (สำหรับบุคคลภายนอก)\r\n                      </DropdownItem>\r\n                    </Link>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>\r\n                      <RegisterModal />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </Fragment>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { clearErrors, loadUser })(AppNavbar));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\main\\MainPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\index.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\main\\RegisterModal.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\main\\Logout.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\main\\Login.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\Page\\main\\UserPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\Page\\complaint\\MainPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\research\\Card.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\Card.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\MainPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\main\\errorAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\type\\main\\type.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\main\\authAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\main\\serviceAction.js",["333"],"import axios from \"axios\";\r\nimport { returnErrors } from \"./errorAction\";\r\nimport {\r\n  GET_ALL_SERVICE_USER,\r\n  GET_USER_SERVICE,\r\n  GET_CURRENT_USER_SERVICE,\r\n  SEND_ACTIVE_SERVICE,\r\n  LOGOUT_SUCCESS,\r\n  ERROR_GET_SERVICE,\r\n} from \"../../type/main/type\";\r\n\r\n// Env\r\nimport { config } from \"../../utilis/config\";\r\nconst connect = config.connectMainAPI;\r\n\r\nexport const getServiceForUserPage = ({ token, buasri_id }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ buasri_id });\r\n  //   console.log(body);\r\n  axios\r\n    .post(connect + \"/api/users/service/list\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_CURRENT_USER_SERVICE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      // alert(\"Session ของคุณหมดอายุ โปรด Login ใหม่\");\r\n      // alert(err);\r\n      // dispatch({\r\n      //   type: LOGOUT_SUCCESS,\r\n      // });\r\n    });\r\n};\r\n\r\nexport const getAllServiceUserForAdmin = ({ token }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  axios\r\n    .get(connect + \"/api/users\", config)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_ALL_SERVICE_USER,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      try {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch({\r\n          type: ERROR_GET_SERVICE,\r\n        });\r\n        // console.log(\"connect server\");\r\n      } catch {\r\n        // console.log(\"can't connect server\");\r\n      }\r\n    });\r\n};\r\n\r\nexport const getServiceUser = ({ token, buasri_id }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ buasri_id });\r\n  console.log(\"check\" + body);\r\n  axios\r\n    .post(connect + \"/api/users/service/list\", body, config)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: GET_USER_SERVICE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const sendResearchActive = ({\r\n  token,\r\n  user_order,\r\n  buasri_id,\r\n  active,\r\n  position,\r\n}) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    user_order,\r\n    buasri_id,\r\n    position,\r\n    active,\r\n  });\r\n  console.log(body);\r\n  axios\r\n    .put(connect + \"/api/users/service/add/research\", body, config)\r\n    .then(() => {\r\n      dispatch({\r\n        type: SEND_ACTIVE_SERVICE,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\index.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\index.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\index.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\main\\depAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\main\\registerAction.js",["334"],"import axios from \"axios\";\r\nimport {\r\n  returnErrors,\r\n  returnErrorsLdap,\r\n  returnErrorsLdapRegis,\r\n} from \"../../actions/main/errorAction\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  PAGE_LOADING,\r\n} from \"../../type/main/type\";\r\n\r\n// Env\r\nimport { config } from \"../../utilis/config\";\r\nconst connect = config.connectMainAPI;\r\nconst conphp = config.connectPHP;\r\n\r\n// Register User\r\nexport const register = ({\r\n  buasri_id,\r\n  password,\r\n  title,\r\n  firstname,\r\n  lastname,\r\n  email,\r\n  dep,\r\n  position,\r\n  type,\r\n  active,\r\n}) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  // Request body\r\n  const body = JSON.stringify({\r\n    buasri_id,\r\n    title,\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    dep,\r\n    position,\r\n    type,\r\n    active,\r\n  });\r\n  const bodyLDAP = JSON.stringify({ buasri_id, password });\r\n  axios\r\n    .post(conphp + \"/ldap.php\", bodyLDAP, config)\r\n    .then((ldap) => {\r\n      if (ldap.data.Result) {\r\n        // register สำเร็จ\r\n        return axios\r\n          .post(connect + \"/api/register\", body, config)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: REGISTER_SUCCESS,\r\n              payload: res.data,\r\n            });\r\n          })\r\n          .then(() =>\r\n            dispatch({\r\n              type: PAGE_LOADING,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            //   error ฝั่ง api\r\n            dispatch(\r\n              returnErrors(\r\n                err.response.data,\r\n                err.response.status,\r\n                \"REGISTER_FAIL\"\r\n              )\r\n            );\r\n          });\r\n      } else {\r\n        //   error ฝั่ง php\r\n        dispatch(returnErrorsLdapRegis());\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    });\r\n};\r\n","D:\\E-Service\\Client_E-Service\\src\\utilis\\config.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\main\\UserPage\\AdminActive.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\research\\MainTableUser.js",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React, { useState, useMemo, Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Label, Button, Pagination, PaginationLink } from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getdetail_list } from \"../../actions/research/listAction\";\r\n\r\nconst MainTableUser = (props) => {\r\n  // Main\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const fetchdata = useSelector((state) => state.research.list.list);\r\n  const [data, setdata] = useState([\r\n    { _id: 0 },\r\n    { buasri_id: null },\r\n    { name: null },\r\n    { status: null },\r\n  ]);\r\n  // Trigger\r\n  const detail_page = useSelector(\r\n    (state) => state.research.trigger.detail_page\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  MainTableUser.propTypes = {\r\n    getdetail_list: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { getdetail_list } = props;\r\n\r\n  const onClick = async (e) => {\r\n    const getValue = await e.target.value.split(\",\");\r\n    const Detail = await {\r\n      token: token,\r\n      id: getValue[0],\r\n      buasri_id: getValue[1],\r\n    };\r\n    // console.log(getValue);\r\n    await getdetail_list(Detail);\r\n  };\r\n\r\n  // trigger\r\n  useEffect(() => {\r\n    if (detail_page) {\r\n      const GotoDetailPage = async () => {\r\n        await dispatch({ type: \"PAGE_LOADING\" });\r\n        await props.history.push(\"/research/detail\");\r\n      };\r\n      GotoDetailPage();\r\n    }\r\n  }, [detail_page]);\r\n\r\n  useEffect(() => {\r\n    if (fetchdata) {\r\n      setdata(fetchdata);\r\n    }\r\n  }, [fetchdata]);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      { Header: \"buasri_id\", accessor: \"buasri_id\" },\r\n      { Header: \"ชื่องานวิจัย\", accessor: \"name\" },\r\n      { Header: \"สถานะ\", accessor: \"status\" },\r\n      {\r\n        Header: \"รายละเอียด\",\r\n        accessor: \"_id\",\r\n        Cell: ({ cell }) => (\r\n          <Button\r\n            value={[cell.row.values._id, cell.row.values.buasri_id]}\r\n            onClick={onClick}\r\n          >\r\n            รายละเอียด\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Define a default UI for filtering\r\n  function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = React.useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n      <span>\r\n        Search:{\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n          style={{\r\n            fontSize: \"1.1rem\",\r\n            border: \"0\",\r\n          }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    state: { pageIndex, pageSize },\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <br />\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              colSpan={visibleColumns.length}\r\n              style={{\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n              />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n      <Table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { getdetail_list })(MainTableUser));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\research\\MainTableAdmin.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { useState, useMemo, Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Label, Button, Pagination, PaginationLink } from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getdetail_list } from \"../../actions/research/listAction\";\r\n\r\nconst MainTableAdmin = (props) => {\r\n  // Main\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const fetchdata = useSelector((state) => state.research.list.list);\r\n  const [data, setdata] = useState([\r\n    { _id: 0 },\r\n    { buasri_id: null },\r\n    { name: null },\r\n    { status: null },\r\n  ]);\r\n  // Trigger\r\n  const detail_page = useSelector(\r\n    (state) => state.research.trigger.detail_page\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  MainTableAdmin.propTypes = {\r\n    getdetail_list: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { getdetail_list } = props;\r\n\r\n  const onClick = async (e) => {\r\n    const getValue = await e.target.value.split(\",\");\r\n    const Detail = await {\r\n      token: token,\r\n      id: getValue[0],\r\n      buasri_id: getValue[1],\r\n    };\r\n    // console.log(getValue);\r\n    await getdetail_list(Detail);\r\n  };\r\n\r\n  // trigger\r\n  useEffect(() => {\r\n    if (detail_page) {\r\n      const GotoDetailPage = async () => {\r\n        await dispatch({ type: \"PAGE_LOADING\" });\r\n        await props.history.push(\"/research/detail\");\r\n      };\r\n      GotoDetailPage();\r\n    }\r\n  }, [detail_page]);\r\n\r\n  useEffect(() => {\r\n    if (fetchdata) {\r\n      setdata(fetchdata);\r\n    }\r\n  }, [fetchdata]);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      { Header: \"buasri_id\", accessor: \"buasri_id\" },\r\n      { Header: \"ชื่องานวิจัย\", accessor: \"name\" },\r\n      {\r\n        Header: \"สถานะ\",\r\n        accessor: \"status\",\r\n        Cell: ({ cell }) => (\r\n          <Fragment>\r\n            {cell.row.values.status === \"WAITING\" ? \"รอกรรมการตรวจสอบ\" : null}\r\n            {cell.row.values.status === \"WAITINGADMIN\"\r\n              ? \"รอฝ่ายวิจัยตรวจสอบ\"\r\n              : null}\r\n            {cell.row.values.status === \"EDIT\" ? \"แก้ไขรายละเอียด\" : null}\r\n            {cell.row.values.status === \"REJECT\" ? \"ยกเลิก\" : null}\r\n            {cell.row.values.status === \"APPROVED\" ? \"ผ่านการตรวจสอบ\" : null}\r\n          </Fragment>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"รายละเอียด\",\r\n        accessor: \"_id\",\r\n        Cell: ({ cell }) => (\r\n          <Button\r\n            value={[cell.row.values._id, cell.row.values.buasri_id]}\r\n            onClick={onClick}\r\n          >\r\n            รายละเอียด\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Define a default UI for filtering\r\n  function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = React.useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n      <span>\r\n        Search:{\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n          style={{\r\n            fontSize: \"1.1rem\",\r\n            border: \"0\",\r\n          }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    state: { pageIndex, pageSize },\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <br />\r\n      {fetchdata ? (\r\n        <Fragment>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th\r\n                  colSpan={visibleColumns.length}\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={state.globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                  />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n          </Table>\r\n          <Table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render(\"Header\")}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { getdetail_list })(MainTableAdmin));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\research\\MainTableCommittee.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { useState, useMemo, Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Label, Button, Pagination, PaginationLink } from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getdetail_list } from \"../../actions/research/listAction\";\r\n\r\nconst MainTableUser = (props) => {\r\n  // Main\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const fetchdata = useSelector((state) => state.research.list.list);\r\n  const [data, setdata] = useState([\r\n    { _id: 0 },\r\n    { buasri_id: null },\r\n    { name: null },\r\n    { status: null },\r\n  ]);\r\n  // Trigger\r\n  const detail_page = useSelector(\r\n    (state) => state.research.trigger.detail_page\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  MainTableUser.propTypes = {\r\n    getdetail_list: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { getdetail_list } = props;\r\n\r\n  const onClick = async (e) => {\r\n    const getValue = await e.target.value.split(\",\");\r\n    const Detail = await {\r\n      token: token,\r\n      id: getValue[0],\r\n      buasri_id: getValue[1],\r\n    };\r\n    // console.log(getValue);\r\n    await getdetail_list(Detail);\r\n  };\r\n\r\n  // trigger\r\n  useEffect(() => {\r\n    if (detail_page) {\r\n      const GotoDetailPage = async () => {\r\n        await dispatch({ type: \"PAGE_LOADING\" });\r\n        await props.history.push(\"/research/detail\");\r\n      };\r\n      GotoDetailPage();\r\n    }\r\n  }, [detail_page]);\r\n\r\n  useEffect(() => {\r\n    if (fetchdata) {\r\n      setdata(fetchdata);\r\n    }\r\n  }, [fetchdata]);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      { Header: \"buasri_id\", accessor: \"buasri_id\" },\r\n      { Header: \"ชื่องานวิจัย\", accessor: \"name\" },\r\n      {\r\n        Header: \"สถานะ\",\r\n        accessor: \"status\",\r\n        Cell: ({ cell }) => (\r\n          <Fragment>\r\n            {cell.row.values.status === \"WAITING\" ? \"รอกรรมการตรวจสอบ\" : null}\r\n            {cell.row.values.status === \"WAITINGADMIN\"\r\n              ? \"รอฝ่ายวิจัยตรวจสอบ\"\r\n              : null}\r\n            {cell.row.values.status === \"EDIT\" ? \"แก้ไขรายละเอียด\" : null}\r\n            {cell.row.values.status === \"REJECT\" ? \"ยกเลิก\" : null}\r\n            {cell.row.values.status === \"APPROVED\" ? \"ผ่านการตรวจสอบ\" : null}\r\n          </Fragment>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"รายละเอียด\",\r\n        accessor: \"_id\",\r\n        Cell: ({ cell }) => (\r\n          <Button\r\n            value={[cell.row.values._id, cell.row.values.buasri_id]}\r\n            onClick={onClick}\r\n          >\r\n            รายละเอียด\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Define a default UI for filtering\r\n  function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = React.useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n      <span>\r\n        Search:{\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n          style={{\r\n            fontSize: \"1.1rem\",\r\n            border: \"0\",\r\n          }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    state: { pageIndex, pageSize },\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <br />\r\n      {fetchdata ? (\r\n        <Fragment>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th\r\n                  colSpan={visibleColumns.length}\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={state.globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                  />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n          </Table>\r\n          <Table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render(\"Header\")}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { getdetail_list })(MainTableUser));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\EditPage.js",["386","387","388","389","390","391"],"import React, { useState, useEffect, Fragment, useMemo } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from \"reactstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport typeartical from \"../../../utilis/research/typearticle.json\";\r\nimport typelevel from \"../../../utilis/research/typelevel.json\";\r\nimport EditTags from \"../../research/TagsEdit\";\r\n\r\nconst ResearchEditPage = (props) => {\r\n  const user = useSelector((state) => state.main.auth.user);\r\n  const detail = useSelector((state) => state.research.list.detail);\r\n  const fullyear = new Date().getFullYear();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  // level0\r\n  // value เปลี่ยนเมื่อ level เปลี่ยน\r\n  const [levelChange, setlevelChange] = useState(\"\");\r\n  // trigger เมื่อ level เปลี่ยน\r\n  const [levelStart, setlevelStart] = useState(true);\r\n  // ใช้ trigger เมื่อเปลี่ยน level sub 2 สำเร็จ\r\n  const [levelStart2, setlevelStart2] = useState(true);\r\n\r\n  const [Level2, setLevel2] = useState([\r\n    {\r\n      sublevel_2_Key: \"\",\r\n      sublevel_2: \"---โปรดเลือก---\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (detail) {\r\n      if (levelStart) {\r\n        setlevelStart(false);\r\n        setlevelStart2(true);\r\n        setlevelChange(detail[0].level);\r\n      }\r\n    }\r\n  }, [detail]);\r\n\r\n  useEffect(() => {\r\n    if (levelChange) {\r\n      if (levelChange === \"INTERNATIONAL\") {\r\n        setLevel2([\r\n          { sublevel_2_Key: \"WEB-OF-SCIENCE\", sublevel_2: \"lsi\" },\r\n          { sublevel_2_Key: \"SCOPUS\", sublevel_2: \"Scopus\" },\r\n        ]);\r\n        setlevelStart2(false);\r\n      } else if (levelChange === \"COUNTRY\") {\r\n        setLevel2([\r\n          { sublevel_2_Key: \"TCI-TYPE-1\", sublevel_2: \"TCI-TYPE-1\" },\r\n          { sublevel_2_Key: \"TCI-TYPE-2\", sublevel_2: \"TCI-TYPE-2\" },\r\n        ]);\r\n        setlevelStart2(false);\r\n      } else {\r\n        setLevel2([\r\n          {\r\n            sublevel_2_Key: \"\",\r\n            sublevel_2: \"---------\",\r\n          },\r\n        ]);\r\n        setlevelStart2(false);\r\n      }\r\n    }\r\n  }, [levelChange]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!detail) {\r\n        props.history.push(\"/research\");\r\n      }\r\n      if (detail && user) {\r\n        if (\r\n          detail[0].buasri_id !== user.buasri_id &&\r\n          detail[0].status !== \"EDIT\"\r\n        ) {\r\n          props.history.push(\"/research\");\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [detail]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"level\") {\r\n      setlevelChange(value);\r\n      console.log(value);\r\n    }\r\n  };\r\n\r\n  function onSubmit(data) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {detail ? (\r\n        <Container>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormGroup>\r\n              <Label for=\"research_name\">ชื่องานวิจัย:</Label>\r\n              <Input\r\n                name=\"research_name\"\r\n                innerRef={register}\r\n                defaultValue={detail[0].research_name}\r\n              ></Input>\r\n            </FormGroup>\r\n            {/* ต้องแก้ */}\r\n            <FormGroup>\r\n              <Label for=\"article_type\">ประเภทงานวิจัย:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"article_type\"\r\n                defaultValue={detail[0].article_type}\r\n                innerRef={register}\r\n              >\r\n                {typeartical.map((opt) => (\r\n                  <option value={opt.articleKEY} key={opt.articleKEY}>\r\n                    {opt.article}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            {/* ต้องแก้ */}\r\n            <FormGroup>\r\n              <Label for=\"article_type\">ปีที่ Pubilc:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"research_year\"\r\n                defaultValue={detail[0].research_year}\r\n                innerRef={register}\r\n              >\r\n                {Array.from(new Array(5), (v, i) => (\r\n                  <option key={i} value={fullyear - i}>\r\n                    {fullyear - i}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"level\">ระดับงานวิจัย:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"level\"\r\n                defaultValue={detail[0].level}\r\n                onChange={onChange}\r\n              >\r\n                {typelevel.map((opt) => (\r\n                  <option value={opt.levelKey} key={opt.levelKey}>\r\n                    {opt.level}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"level_sub1\">*อยู่ในเกณฑ์ กพอ หรือไม่?</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"level_sub1\"\r\n                innerRef={register}\r\n                defaultValue={detail[0].level_sub1}\r\n              >\r\n                <option value=\"OCSC\">อยู่ในเกณฑ์</option>\r\n                <option value=\"NON-OCSC\">ไม่อยู่ในเกณฑ์</option>\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"level_sub2\">*ฐานข้อมูล</Label>\r\n              {levelStart2 ? null : (\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"level_sub2\"\r\n                  innerRef={register}\r\n                  defaultValue={detail[0].level_sub2}\r\n                >\r\n                  {Level2.map((sublevel_2) => (\r\n                    <option\r\n                      key={sublevel_2.sublevel_2_Key}\r\n                      value={sublevel_2.sublevel_2_Key}\r\n                    >\r\n                      {sublevel_2.sublevel_2}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"tagResearch\">Tag:</Label>\r\n              <EditTags />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button color=\"dark\">Submit</Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, null)(ResearchEditPage));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\DetailPage.js",["392","393","394","395","396"],"D:\\E-Service\\Client_E-Service\\src\\components\\main\\BackMainPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\Page\\research\\FormPage.js",["397","398","399","400","401","402","403","404"],"D:\\E-Service\\Client_E-Service\\src\\components\\research\\FormButton.js",["405","406","407","408","409"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nconst FormButton = (props) => {\r\n  const [modal, setmodal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const toggle = () => {\r\n    setmodal(!modal);\r\n  };\r\n  const GoFormPage = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"PAGE_LOADING\" });\r\n    props.history.push(\"/research/form\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button name=\"button\" color=\"dark\" onClick={toggle}>\r\n        เพิ่มงานวิจัย\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>หลักเกณฑ์ในการกรอกแบบฟอร์มงานวิจัย</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <ul>\r\n            <li>\r\n              ใช้ถ้อยคำหรือข้อความที่สุภาพ และต้องมี\r\n              <ul>\r\n                <li>\r\n                  ชื่อ ที่อยู่ หมายเลขโทรศัพท์ หรือ อีเมล์\r\n                  ที่สามารถติดต่อถึงผู้ร้องเรียนหรือร้องทุกข์ได้\r\n                </li>\r\n                <li>\r\n                  ข้อเท็จจริง หรือ\r\n                  พฤติการณ์ของเรื่องที่ร้องเรียนได้อย่างชัดเจนว่าได้รับความเดือดร้อนหรือเสียหายอย่างไร\r\n                  ต้องการให้แก้ไข\r\n                </li>\r\n                <li>\r\n                  ระบุ เวลา สถานที่ พยาน เอกสาร พยานวัตถุ และพยานบุคคล (ถ้ามี)\r\n                  ให้ชัดเจน\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              ข้อร้องเรียนต้องเป็นเรื่องจริงที่มีมูลเหตุ\r\n              มิได้หวังสร้างกระแสหรือสร้างข่าวที่เสียหายต่อบุคคลอื่นหรือหน่วยงานต่างๆ\r\n              ที่เกี่ยวข้อง\r\n            </li>\r\n            <li>\r\n              การใช้บริการร้องเรียนนั้น ต้องสามารถติดต่อกลับไปยังผู้ใช้บริการได้\r\n              เพื่อยืนยันว่ามีตัวตนจริง\r\n              ไม่ได้สร้างเรื่องเพื่อกล่าวหาบุคคลอื่นหรือหน่วยงานต่าง ๆ\r\n              ให้เกิดความเสียหาย\r\n            </li>\r\n            <li>\r\n              ข้อร้องเรียนที่มีข้อมูลไม่ครบถ้วน ไม่เพียงพอ\r\n              หรือไม่สามารถหาข้อมูลเพิ่มเติมได้ในการดำเนินการตรวจสอบ สืบสวน\r\n              สอบสวน ข้อเท็จจริง ตามรายละเอียดที่กล่าวมาในข้อที่ 1 นั้น\r\n              ให้ยุติเรื่อง\r\n            </li>\r\n          </ul>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button name=\"button\" color=\"dark\" onClick={GoFormPage}>\r\n            ยอมรับ\r\n          </Button>\r\n          <Button name=\"button\" color=\"warning\" onClick={toggle}>\r\n            ไม่ยอมรับ\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, null)(FormButton));\r\n","D:\\E-Service\\Client_E-Service\\src\\actions\\research\\listAction.js",["410","411","412"],"import axios from \"axios\";\r\nimport {\r\n  RESEARCH_GET_LIST_USER,\r\n  RESEARCH_GET_LIST_ADMIN,\r\n  RESEARCH_GET_LIST_COMMITTEE,\r\n  RESEARCH_GET_DETAIL,\r\n  RESEARCH_UPDATE_STATUS,\r\n  RESEARCH_ERROR,\r\n} from \"../../type/research/type\";\r\n\r\n// Env\r\nimport { config } from \"../../utilis/config\";\r\nconst conResearch = config.connectResearchAPI;\r\nconst conphp = config.connectPHP;\r\n\r\n// get list user\r\nexport const getlist_user = ({ buasri_id, token }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const body = JSON.stringify({ buasri_id });\r\n  axios\r\n    .post(conResearch + \"/api/list/user\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: RESEARCH_GET_LIST_USER,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: RESEARCH_ERROR,\r\n        payload: error.data,\r\n      });\r\n    });\r\n};\r\n\r\n// get list committee\r\nexport const getlist_committee = ({ dep, token }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const body = JSON.stringify({ dep });\r\n  axios\r\n    .post(conResearch + \"/api/list/committee\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: RESEARCH_GET_LIST_COMMITTEE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: RESEARCH_ERROR,\r\n        payload: error.data,\r\n      });\r\n    });\r\n};\r\n\r\n// get list admin\r\nexport const getlist_admin = ({ token, buasri_id }) => (dispatch) => {\r\n  // console.log(token);\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const body = JSON.stringify({ buasri_id });\r\n  axios\r\n    .post(conResearch + \"/api/list/admin\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: RESEARCH_GET_LIST_ADMIN,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: RESEARCH_ERROR,\r\n        payload: error.data,\r\n      });\r\n    });\r\n};\r\n\r\n// get detail when selected\r\nexport const getdetail_list = ({ token, id, buasri_id }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ buasri_id, id });\r\n  // console.log(body);\r\n  axios.post(conResearch + \"/api/list/select\", body, config).then((res) => {\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: RESEARCH_GET_DETAIL,\r\n      payload: res.data,\r\n    });\r\n  });\r\n};\r\n\r\n// update status committee\r\nexport const status_committee = ({\r\n  token,\r\n  id,\r\n  buasri_id,\r\n  committee,\r\n  email,\r\n  status,\r\n  note,\r\n}) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const body = JSON.stringify({ id, buasri_id, committee, status, note });\r\n  const email_user = JSON.stringify({ email });\r\n\r\n  axios\r\n    .post(conResearch + \"/api/list/status_committee\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: RESEARCH_UPDATE_STATUS,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: RESEARCH_ERROR,\r\n        payload: error.data,\r\n      });\r\n    });\r\n};\r\n\r\n// update status admin\r\nexport const status_admin = ({\r\n  token,\r\n  id,\r\n  buasri_id,\r\n  admin,\r\n  email,\r\n  status,\r\n  note,\r\n}) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const body = JSON.stringify({ id, buasri_id, admin, status, note });\r\n  const email_user = JSON.stringify({ email });\r\n  axios\r\n    .post(conResearch + \"/api/list/status_admin\", body, config)\r\n    .then((res) => {\r\n      if (status === \"APPROVED\") {\r\n        dispatch({\r\n          type: RESEARCH_UPDATE_STATUS,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: RESEARCH_UPDATE_STATUS,\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: RESEARCH_ERROR,\r\n        payload: error.data,\r\n      });\r\n    });\r\n};\r\n","D:\\E-Service\\Client_E-Service\\src\\actions\\research\\registerAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\research\\authAction.js",["413","414"],"import axios from \"axios\";\r\nimport { returnErrors } from \"../main/errorAction\";\r\nimport {\r\n  RESEARCH_AUTH_SUCCESS,\r\n  RESEARCH_AUTH_FAIL,\r\n} from \"../../type/research/type\";\r\n\r\n// ENV\r\nimport { config } from \"../../utilis/config\";\r\nconst conResearch = config.connectResearchAPI;\r\n\r\n// Auth User\r\nexport const auth_user = ({ buasri_id }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ buasri_id });\r\n  // console.log(body);\r\n  axios\r\n    .post(conResearch + \"/api/user/id\", body, config)\r\n    .then((res) => {\r\n      if (res.data.token) {\r\n        dispatch({\r\n          type: RESEARCH_AUTH_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      //   dispatch(returnErrors(err.response.data, err.response.status));\r\n      //   dispatch({\r\n      //     type: RESEARCH_AUTH_FAIL,\r\n      //   });\r\n    });\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const token = (getState) => {\r\n  // Get token from localstorage\r\n  const token = getState().main.auth.token;\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","D:\\E-Service\\Client_E-Service\\src\\utilis\\newLine.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\research\\TagsEdit.js",["415","416"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Input } from \"reactstrap\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport { collecttag } from \"../../actions/research/formAction\";\r\nimport \"../../utilis/reactTag.css\";\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nclass EditTags extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.research[0].tags);\r\n    this.state = {\r\n      tags: this.props.research[0].tags ? this.props.research[0].tags : [],\r\n      suggestions: [\r\n        { id: \"biology\", text: \"Biology\" },\r\n        { id: \"machine-learning\", text: \"Machine Learning\" },\r\n        { id: \"data-science\", text: \"Data Science\" },\r\n        { id: \"physics\", text: \"Physics\" },\r\n        { id: \"chemistry\", text: \"Chemistry\" },\r\n        { id: \"materials\", text: \"Materials\" },\r\n      ],\r\n    };\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n  }\r\n\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i),\r\n    });\r\n  }\r\n\r\n  handleAddition(tag) {\r\n    this.setState((state) => ({ tags: [...state.tags, tag] }));\r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    this.setState({ tags: newTags });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.tags !== this.state.tags) {\r\n      // console.log(this.state.tags);\r\n      this.props.collecttag(this.state.tags);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tags, suggestions } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <ReactTags\r\n          tags={tags}\r\n          suggestions={suggestions}\r\n          handleDelete={this.handleDelete}\r\n          handleAddition={this.handleAddition}\r\n          handleDrag={this.handleDrag}\r\n          delimiters={delimiters}\r\n          inputFieldPosition=\"top\"\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { research: state.research.list.detail };\r\n}\r\n\r\nexport default connect(mapStateToProps, { collecttag })(EditTags);\r\n","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\depReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\research\\UpdateStatusModal.js",["417","418","419"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n  status_committee,\r\n  status_admin,\r\n} from \"../../actions/research/listAction\";\r\n\r\nconst UpdateStatusModal = (props) => {\r\n  const { handleSubmit, register } = useForm();\r\n\r\n  const user = useSelector((state) => state.main.auth.user);\r\n  const e_research = useSelector((state) => state.main.auth.service.e_research);\r\n  const detail = useSelector((state) => state.research.list.detail);\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const dispatch = useDispatch();\r\n\r\n  // ค่า status ที่ต้องการเปลี่ยน\r\n  const initialValue = [\r\n    { id: 0, value: \"A\", name: \"1\" },\r\n    { id: 1, value: \"B\", name: \"2\" },\r\n  ];\r\n  const [StatusName, setStatusName] = useState(null);\r\n  const [StatusChange, setStatusChange] = useState(initialValue);\r\n  const [modal, setmodal] = useState(false);\r\n  const [disButton, setdisButton] = useState(false);\r\n\r\n  UpdateStatusModal.propTypes = {\r\n    status_committee: PropTypes.func.isRequired,\r\n    status_admin: PropTypes.func.isRequired,\r\n  };\r\n  const { status_committee, status_admin } = props;\r\n\r\n  // status ก่อนเปลี่ยน\r\n  useEffect(() => {\r\n    if (detail) {\r\n      if (detail[0].status === \"WAITING\") {\r\n        setStatusName(\"รอกรรมการตรวจสอบ\");\r\n      }\r\n      if (detail[0].status === \"WAITINGADMIN\") {\r\n        setStatusName(\"รอฝ่ายวิจัยตรวจสอบ\");\r\n      }\r\n      if (detail[0].status === \"REJECT\") {\r\n        setStatusName(\"ยกเลิก\");\r\n      }\r\n      if (detail[0].status === \"EDIT\") {\r\n        setStatusName(\"แก้ไข\");\r\n      }\r\n      if (detail[0].status === \"APPROVED\") {\r\n        setStatusName(\"ผ่านการตรวจสอบ\");\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [detail]);\r\n\r\n  // status สำหรับเปลี่ยน\r\n  useEffect(() => {\r\n    const WaitingStatus = [\r\n      {\r\n        id: 0,\r\n        value: \"WAITINGADMIN\",\r\n        name: \"ผ่านการตรวจสอบ ส่งให้ฝ่ายวิจัยตรวจสอบ\",\r\n      },\r\n      { id: 1, value: \"EDIT\", name: \"แก้ไข\" },\r\n      { id: 2, value: \"REJECT\", name: \"ยกเลิก\" },\r\n    ];\r\n    const WaitingAdminStatus = [\r\n      { id: 0, value: \"APPROVED\", name: \"ผ่านการตรวจสอบ\" },\r\n      { id: 1, value: \"EDIT\", name: \"แก้ไข\" },\r\n      { id: 2, value: \"REJECT\", name: \"ยกเลิก\" },\r\n    ];\r\n    const EditStatus = [\r\n      { id: 0, value: \"WAITING\", name: \"ส่งกลับไปที่ผู้ส่งงานวิจัย\" },\r\n    ];\r\n\r\n    if (StatusName) {\r\n      if (detail[0].status === \"WAITING\") {\r\n        setStatusChange(WaitingStatus);\r\n      }\r\n      if (detail[0].status === \"WAITINGADMIN\") {\r\n        setStatusChange(WaitingAdminStatus);\r\n      }\r\n      if (detail[0].status === \"EDIT\") {\r\n        setStatusChange(EditStatus);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [StatusName]);\r\n\r\n  const toggle = async () => {\r\n    await setmodal(!modal);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    if (e_research) {\r\n      if (e_research.position) {\r\n        const Update = await {\r\n          token,\r\n          id: e.no_id,\r\n          buasri_id: detail[0].buasri_id,\r\n          committee:\r\n            e_research.position === \"COMMITTEE\" ? user.buasri_id : undefined,\r\n          admin: e_research.position === \"ADMIN\" ? user.buasri_id : undefined,\r\n          email: detail[0].email,\r\n          status: e.status_change,\r\n          note: e.note,\r\n        };\r\n\r\n        if (e_research.position === \"ADMIN\") {\r\n          status_admin(Update);\r\n        } else if (e_research.position === \"COMMITTEE\") {\r\n          status_committee(Update);\r\n        } else if (e_research.position === \"USER\") {\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e_research) {\r\n      if (e_research.position) {\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {detail[0].status !== \"APPROVED\" || detail[0].status !== \"REJECT\" ? (\r\n        <Button onClick={toggle} disabled={disButton}>\r\n          อัพเดตสถานะ\r\n        </Button>\r\n      ) : null}\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>สถานะที่ต้องการอัพเดต</ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormGroup>\r\n              <Label for=\"no_id\">หมายเลขงานวิจัย</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"no_id\"\r\n                placeholder={detail[0]._id}\r\n                value={detail[0]._id}\r\n                innerRef={register}\r\n                readOnly\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"current_status\">สถานะปัจจุบัน</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"current_status\"\r\n                placeholder={StatusName}\r\n                value={detail[0].status}\r\n                innerRef={register}\r\n                readOnly\r\n              ></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"note\">รายละเอียด</Label>\r\n              <Input type=\"textarea\" name=\"note\" innerRef={register}></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"status_change\">สถานะที่ต้องการเปลี่ยน</Label>\r\n              <Input type=\"select\" name=\"status_change\" innerRef={register}>\r\n                {StatusChange.map((currentStatus, index) => (\r\n                  <option\r\n                    key={currentStatus.id}\r\n                    name={currentStatus.name}\r\n                    value={currentStatus.value}\r\n                  >\r\n                    {currentStatus.name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n            <Button\r\n              name=\"updateButton\"\r\n              disabled={disButton}\r\n              color=\"dark\"\r\n              style={{ marginTop: \"2rem\" }}\r\n              block\r\n            >\r\n              อัพเดตสถานะ\r\n            </Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  connect(null, { status_committee, status_admin })(UpdateStatusModal)\r\n);\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\research\\BackResearchPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\listUserServiceReducer.js",["420"],"import {\r\n  GET_ALL_SERVICE_USER,\r\n  ERROR_GET_SERVICE,\r\n  LOGOUT_SUCCESS,\r\n  GET_USER_SERVICE,\r\n} from \"../../type/main/type\";\r\n\r\nconst initialState = {\r\n  userlist: null,\r\n};\r\n\r\nexport default function listuserReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_SERVICE_USER:\r\n      const list = action.payload;\r\n      return list\r\n        ? {\r\n            userlist: list,\r\n          }\r\n        : {\r\n            userlist: null,\r\n          };\r\n    case ERROR_GET_SERVICE:\r\n      return {\r\n        userlist: null,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        userlist: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\errorReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\serviceReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\triggerReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\main\\authReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\triggerReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\listReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\research\\formAction.js",["421","422"],"import axios from \"axios\";\r\nimport {\r\n  RESEARCH_GET_UPLOAD_FILE,\r\n  RESEARCH_ADD_LIST_SUCCESS,\r\n  COLLECT_TAG,\r\n} from \"../../type/research/type\";\r\n\r\n// Env\r\nimport { config } from \"../../utilis/config\";\r\nconst conResearch = config.connectResearchAPI;\r\nconst conphp = config.connectPHP;\r\n\r\n// Upload File\r\nexport const uploadfile = (NewUploadFile, token) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  axios\r\n    .post(conResearch + \"/api/upload\", NewUploadFile, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: RESEARCH_GET_UPLOAD_FILE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n// PUT LIST TO MONGODB\r\nexport const newlist = ({\r\n  token,\r\n  year,\r\n  title_name,\r\n  firstname,\r\n  lastname,\r\n  buasri_id,\r\n  email,\r\n  article,\r\n  type_name,\r\n  level,\r\n  sub_level_1,\r\n  sub_level_2,\r\n  conf_year,\r\n  quartile,\r\n  conference_name,\r\n  conf_country,\r\n  conf_local,\r\n  author,\r\n  name,\r\n  tags,\r\n  status,\r\n  file_name,\r\n  file_path,\r\n}) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n  const configemail = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // body\r\n  const body = JSON.stringify({\r\n    year,\r\n    title_name,\r\n    firstname,\r\n    lastname,\r\n    buasri_id,\r\n    email,\r\n    article,\r\n    type_name: type_name ? type_name : undefined,\r\n    level,\r\n    sub_level_1,\r\n    sub_level_2,\r\n    conf_year,\r\n    quartile,\r\n    conference_name: conference_name ? conference_name : undefined,\r\n    conf_country: conf_country ? conf_country : undefined,\r\n    conf_local: conf_local ? conf_local : undefined,\r\n    author,\r\n    name,\r\n    tags: tags ? tags : undefined,\r\n    status,\r\n    file_name,\r\n    file_path,\r\n  });\r\n\r\n  console.log(body);\r\n  axios\r\n    .put(conResearch + \"/api/list/add\", body, config)\r\n    .then((res) => {\r\n      if (res.data) {\r\n        dispatch({\r\n          type: RESEARCH_ADD_LIST_SUCCESS,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Collect Tags\r\nexport const collecttag = (tag) => ({\r\n  type: COLLECT_TAG,\r\n  payload: {\r\n    tag,\r\n  },\r\n});\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\research\\Tags.js",["423","424"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Input } from \"reactstrap\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport { collecttag } from \"../../actions/research/formAction\";\r\nimport \"../../utilis/reactTag.css\";\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nclass Tags extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tags: [],\r\n      suggestions: [\r\n        { id: \"biology\", text: \"Biology\" },\r\n        { id: \"machine-learning\", text: \"Machine Learning\" },\r\n        { id: \"data-science\", text: \"Data Science\" },\r\n        { id: \"physics\", text: \"Physics\" },\r\n        { id: \"chemistry\", text: \"Chemistry\" },\r\n        { id: \"materials\", text: \"Materials\" },\r\n      ],\r\n    };\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n  }\r\n\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i),\r\n    });\r\n  }\r\n\r\n  handleAddition(tag) {\r\n    this.setState((state) => ({ tags: [...state.tags, tag] }));\r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    this.setState({ tags: newTags });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.tags !== this.state.tags) {\r\n      // console.log(this.state.tags);\r\n      this.props.collecttag(this.state.tags);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tags, suggestions } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <ReactTags\r\n          tags={tags}\r\n          suggestions={suggestions}\r\n          handleDelete={this.handleDelete}\r\n          handleAddition={this.handleAddition}\r\n          handleDrag={this.handleDrag}\r\n          delimiters={delimiters}\r\n          inputFieldPosition=\"top\"\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { collecttag })(Tags);\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\main\\ServiceActive\\researchActive.js",["425"],"import React, { useState, useEffect, useMemo, Fragment } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { PAGE_LOADING } from \"../../../type/main/type\";\r\n// Send Service\r\nimport { sendResearchActive } from \"../../../actions/main/serviceAction\";\r\n\r\nconst ResearchActive = (props) => {\r\n  const ColoredLine = ({ color }) => (\r\n    <hr\r\n      style={{\r\n        color: color,\r\n        backgroundColor: color,\r\n        height: 1,\r\n      }}\r\n    />\r\n  );\r\n\r\n  const { handleSubmit, register } = useForm();\r\n  const servicelist = useSelector((state) => state.main.service);\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const user = useSelector((state) => state.main.auth.user);\r\n  const trigger = useSelector((state) => state.main.trigger);\r\n  const [triggerOnlyOne, settriggerOnlyOne] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [levelvalue, setlevelvalue] = useState(\"USER\");\r\n  const [activevalue, setactivevalue] = useState(\"INACTIVE\");\r\n  const [actives] = useState([\r\n    {\r\n      label: \"Active\",\r\n      value: \"ACTIVE\",\r\n    },\r\n    {\r\n      label: \"Inactive\",\r\n      value: \"INACTIVE\",\r\n    },\r\n  ]);\r\n  const [activefirst] = useState([\r\n    {\r\n      label: \"Active\",\r\n      value: \"ACTIVE\",\r\n    },\r\n  ]);\r\n  const [levels] = useState([\r\n    {\r\n      label: \"ผู้ใช้งาน\",\r\n      value: \"USER\",\r\n    },\r\n    {\r\n      label: \"กรรมการตรวจสอบ\",\r\n      value: \"COMMITTEE\",\r\n    },\r\n    {\r\n      label: \"ผู้ดูแลระบบ\",\r\n      value: \"ADMIN\",\r\n    },\r\n  ]);\r\n\r\n  ResearchActive.propTypes = {\r\n    sendResearchActive: PropTypes.func.isRequired,\r\n  };\r\n  const { sendResearchActive } = props;\r\n\r\n  useEffect(() => {\r\n    if (servicelist.E_Research) {\r\n      if (servicelist.E_Research.active)\r\n        setactivevalue(servicelist.E_Research.active);\r\n      // console.log(servicelist.E_Research.active);\r\n      if (servicelist.E_Research.position)\r\n        setlevelvalue(servicelist.E_Research.position);\r\n    }\r\n  }, [servicelist]);\r\n\r\n  useMemo(() => {\r\n    const goMainPage = async () => {\r\n      if (trigger.active) {\r\n        if (triggerOnlyOne) {\r\n          await settriggerOnlyOne(false);\r\n          await alert(\"อัพเดตรายการสำเร็จ\");\r\n          await dispatch({ type: PAGE_LOADING });\r\n          await props.history.push(\"/\");\r\n        }\r\n      }\r\n    };\r\n    goMainPage();\r\n    // eslint-disable-next-line\r\n  }, [trigger]);\r\n\r\n  const onSubmit = async (e) => {\r\n    const newSet = await {\r\n      token: token,\r\n      user_order: user.buasri_id,\r\n      buasri_id: servicelist.buasri_id,\r\n      position: e.levelinput,\r\n      active: e.activeinput,\r\n    };\r\n    await sendResearchActive(newSet);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h4>E-Research</h4>\r\n      <ColoredLine color=\"grey\" />\r\n      <Container>\r\n        <Row>\r\n          <Label className=\"font-weight-bolder\">ข้อมูลปัจจุบัน</Label>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Label>การเปิดสิทธิ์:</Label>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <Label>\r\n              <p>\r\n                {actives\r\n                  .filter((data) => {\r\n                    if (data.value === activevalue) {\r\n                      return data.label;\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  })\r\n                  .map((data) => {\r\n                    if (data.value === activevalue) {\r\n                      return <Fragment key={data.value}>{data.label}</Fragment>;\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  })}\r\n              </p>\r\n            </Label>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Label>ระดับการเข้าใช้งาน:</Label>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <Label>\r\n              {levels\r\n                .filter((data) => {\r\n                  if (data.value === levelvalue) {\r\n                    return data.label;\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n                .map((data) => {\r\n                  if (data.value === levelvalue) {\r\n                    return <Fragment key={data.value}>{data.label}</Fragment>;\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })}\r\n            </Label>\r\n          </Col>\r\n        </Row>\r\n        <ColoredLine color=\"white\" />\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Label className=\"font-weight-bolder\">\r\n              ข้อมูลที่ต้องการเปลี่ยน\r\n            </Label>\r\n          </Row>\r\n          <FormGroup row>\r\n            <Label for=\"activeinput\" sm={3}>\r\n              การเปิดสิทธิ์:\r\n            </Label>\r\n            <Col sm={8}>\r\n              {servicelist.E_Research ? (\r\n                <Fragment>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"activeinput\"\r\n                    id=\"activeinput\"\r\n                    innerRef={register}\r\n                    defaultValue={servicelist.E_Research.active}\r\n                  >\r\n                    <option value=\"ACTIVE\">Active</option>\r\n                    <option value=\"INACTIVE\">Inactive</option>\r\n                  </Input>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"activeinput\"\r\n                    defaultValue=\"INACTIVE\"\r\n                    innerRef={register}\r\n                  >\r\n                    <option value=\"ACTIVE\">Active</option>\r\n                    <option value=\"INACTIVE\">Inactive</option>\r\n                  </Input>\r\n                </Fragment>\r\n              )}\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"levelinput\" sm={3}>\r\n              ระดับการเข้าใช้งาน:\r\n            </Label>\r\n            <Col sm={8}>\r\n              {servicelist.E_Research ? (\r\n                <Fragment>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"levelinput\"\r\n                    id=\"levelinput\"\r\n                    innerRef={register}\r\n                    defaultValue={levelvalue}\r\n                  >\r\n                    {levels.map(({ label, value }) => (\r\n                      <option key={value} value={value}>\r\n                        {label}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"levelinput\"\r\n                    id=\"levelinput\"\r\n                    innerRef={register}\r\n                  >\r\n                    {levels.map(({ label, value }) => (\r\n                      <option key={value} value={value}>\r\n                        {label}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Fragment>\r\n              )}\r\n            </Col>\r\n          </FormGroup>\r\n          <br />\r\n          <FormGroup row>\r\n            <Col sm={3}></Col>\r\n            <Col sm={8}>\r\n              <Button>ยืนยันการเปลี่ยนแปลง</Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n      <ColoredLine color=\"grey\" />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  connect(null, { sendResearchActive })(ResearchActive)\r\n);\r\n","D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\formReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\research\\authReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\MainTableAdmin.js",["426","427","428","429","430"],"import React, { useState, useMemo, Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Label, Button, Pagination, PaginationLink } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { getdetail_list } from \"../../actions/complaint/listAction\";\r\n\r\nconst MainTableAdmin = (props) => {\r\n  // Complaint\r\n  const data = useSelector((state) => state.complaint.list.list);\r\n  const Token = useSelector((state) => state.main.auth.token);\r\n  const dispatch = useDispatch();\r\n\r\n  MainTableAdmin.propTypes = {\r\n    getdetail_list: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { getdetail_list } = props;\r\n  const onClick = async (e) => {\r\n    const getValue = await e.target.value.split(\",\");\r\n    const Detail = await {\r\n      token: Token,\r\n      id: getValue[0],\r\n      buasri_id: getValue[1],\r\n    };\r\n    await getdetail_list(Detail);\r\n    await dispatch({ type: \"PAGE_LOADING\" });\r\n    await props.history.push(\"/complaint/detail\");\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Buasri ID\",\r\n        accessor: \"buasri_id\",\r\n      },\r\n      {\r\n        Header: \"ประเภท\",\r\n        accessor: \"type\",\r\n        Cell: ({ cell }) => (\r\n          <p>\r\n            {cell.row.values.type === \"BUILDING\" ? \"อาคารและสถานที่\" : null}\r\n            {cell.row.values.type === \"LEARNING\" ? \"การเรียนการสอน\" : null}\r\n            {cell.row.values.type === \"ACTIVITY\" ? \"กิจกรรม\" : null}\r\n            {cell.row.values.type === \"SERVICES\" ? \"การบริการ\" : null}\r\n            {cell.row.values.type === \"OTHER\" ? \"อื่น ๆ\" : null}\r\n          </p>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"หัวข้อ\",\r\n        accessor: \"topic\",\r\n      },\r\n      {\r\n        Header: \"สถานะ\",\r\n        accessor: \"status\",\r\n        Cell: ({ cell }) => (\r\n          <Fragment>\r\n            {cell.row.values.status === \"WAITING\" ? \"รอรับเรื่อง\" : null}\r\n            {cell.row.values.status === \"RECEIVED\"\r\n              ? \"รับเรื่องแล้ว รอพิจารณา\"\r\n              : null}\r\n            {cell.row.values.status === \"CONSIDERING\" ? \"กำลังพิจารณา\" : null}\r\n            {cell.row.values.status === \"EDIT\"\r\n              ? \"ต้องการข้อมูลเพิ่มเติม รอข้อมูลจากผู้แจ้ง\"\r\n              : null}\r\n            {cell.row.values.status === \"RESULT\" ? \"เสร็จสิ้นการพิจารณา\" : null}\r\n          </Fragment>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"รายละเอียด\",\r\n        accessor: \"_id\",\r\n        Cell: ({ cell }) => (\r\n          <Button\r\n            value={[cell.row.values._id, cell.row.values.buasri_id]}\r\n            onClick={onClick}\r\n          >\r\n            รายละเอียด\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Define a default UI for filtering\r\n  function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = React.useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n      <span>\r\n        Search:{\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n          style={{\r\n            fontSize: \"1.1rem\",\r\n            border: \"0\",\r\n          }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    state: { pageIndex, pageSize },\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <br />\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              colSpan={visibleColumns.length}\r\n              style={{\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n              />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n      <Table bordered {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination>\r\n        <PaginationLink onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {\"<\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {\">\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {\">>\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink disabled>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </PaginationLink>\r\n        <PaginationLink>\r\n          <Label>| Go to page:</Label>{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: \"100px\" }}\r\n          />\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink>\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </PaginationLink>\r\n      </Pagination>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { getdetail_list })(MainTableAdmin));\r\n","D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\triggerReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\listReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\type\\research\\type.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\logReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\reducers\\complaint\\authReducer.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\Page\\complaint\\DetailPage.js",["431","432","433","434"],"import React, { useState, useEffect, Fragment, useMemo } from \"react\";\r\nimport { Container, Table } from \"reactstrap\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport statusJson from \"../../../utilis/typestatus.json\";\r\nimport typeJson from \"../../../utilis/typecomplaint.json\";\r\nimport UpdateStatusModal from \"../../complaint/UpdateStatusModal\";\r\nimport BackComplaintPage from \"../../complaint/BackComplaintPage\";\r\n\r\n// Env\r\nimport { config } from \"../../../utilis/config\";\r\nimport NewLineToBr from \"../../../utilis/newLine\";\r\n\r\nconst ComplaintDetailPage = (props) => {\r\n  const detail = useSelector((state) => state.complaint.list.detail);\r\n  const complaintUser = useSelector((state) => state.complaint.auth.user);\r\n  const [TypeFilter, setTypeFilter] = useState(null);\r\n  const [StatusFilter, setStatusFilter] = useState(null);\r\n  const [NoteFilter, setNoteFilter] = useState(\"ไม่มีรายละเอียด\");\r\n  const [UploadFilter, setUploadFilter] = useState(null);\r\n  const conComplaint = config.connectComplaintAPI;\r\n\r\n  useMemo(() => {\r\n    if (detail) {\r\n      if (detail[0].status) {\r\n        setStatusFilter(\r\n          statusJson\r\n            .filter((data) => {\r\n              if (data.status === detail[0].status) {\r\n                return data.name;\r\n              } else {\r\n                return null;\r\n              }\r\n            })\r\n            .map((data) => {\r\n              if (data.status === detail[0].status) {\r\n                return <Fragment key={data.status}>{data.name}</Fragment>;\r\n              } else {\r\n                return null;\r\n              }\r\n            })\r\n        );\r\n        setTypeFilter(\r\n          typeJson\r\n            .filter((data) => {\r\n              if (data.type === detail[0].type) {\r\n                return data.name;\r\n              } else {\r\n                return null;\r\n              }\r\n            })\r\n            .map((data) => {\r\n              if (data.type === detail[0].type) {\r\n                return <Fragment key={data.type}>{data.name}</Fragment>;\r\n              } else {\r\n                return null;\r\n              }\r\n            })\r\n        );\r\n      }\r\n      if (detail[0].status.note) {\r\n        setNoteFilter(detail[0].status.note);\r\n      }\r\n      if (detail[0].file_name) {\r\n        setUploadFilter(conComplaint + detail[0].file_path);\r\n      }\r\n    }\r\n  }, [detail]);\r\n  //   console.log(StatusFilter);\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <BackComplaintPage />\r\n      </Container>\r\n\r\n      {detail ? (\r\n        <Fragment>\r\n          <Container>\r\n            <h4>รายละเอียด</h4>\r\n            <br />\r\n            <Table hover responsive>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">หัวข้อที่แจ้ง:</th>\r\n                  <td>{detail[0].topic}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">ประเภทการร้องเรียน:</th>\r\n                  <td>{TypeFilter}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">รายละเอียด:</th>\r\n                  <td>\r\n                    <NewLineToBr>{detail[0].detail}</NewLineToBr>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">E-mail:</th>\r\n                  <td>{detail[0].email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">เบอร์ติดต่อ:</th>\r\n                  <td>{detail[0].phone}</td>\r\n                </tr>\r\n                {UploadFilter ? (\r\n                  <tr>\r\n                    <th scope=\"row\">รูปภาพ:</th>\r\n                    <td>\r\n                      <img src={UploadFilter} alt=\"\" width=\"300\"></img>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n              </tbody>\r\n            </Table>\r\n          </Container>\r\n          <Container>\r\n            <h4>สถานะล่าสุด</h4>\r\n            <Table hover responsive>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">สถานะ:</th>\r\n                  <td>{StatusFilter}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">รายละเอียด:</th>\r\n                  <td colSpan=\"4\">{NoteFilter}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            {complaintUser.position === \"ADMIN\" &&\r\n            detail[0].status !== \"EDIT\" &&\r\n            detail[0].member === \"MEMBER\" ? (\r\n              <UpdateStatusModal />\r\n            ) : null}\r\n            {complaintUser.position === \"ADMIN\" &&\r\n            detail[0].member === \"GUEST\" ? (\r\n              <UpdateStatusModal />\r\n            ) : null}\r\n            {complaintUser.position === \"USER\" &&\r\n            detail[0].status === \"EDIT\" ? (\r\n              <UpdateStatusModal />\r\n            ) : null}\r\n          </Container>\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, null)(ComplaintDetailPage));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\MainTableUser.js",["435","436","437","438","439"],"import React, { useState, useMemo, Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Label, Button, Pagination, PaginationLink } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { getdetail_list } from \"../../actions/complaint/listAction\";\r\n\r\nconst MainTableUser = (props) => {\r\n  // Complaint\r\n  const data = useSelector((state) => state.complaint.list.list);\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const dispatch = useDispatch();\r\n\r\n  MainTableUser.propTypes = {\r\n    getdetail_list: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { getdetail_list } = props;\r\n  const onClick = async (e) => {\r\n    const getValue = await e.target.value.split(\",\");\r\n    const Detail = await {\r\n      token: token,\r\n      id: getValue[0],\r\n      buasri_id: getValue[1],\r\n    };\r\n    // console.log(getValue);\r\n    await getdetail_list(Detail);\r\n    await dispatch({ type: \"PAGE_LOADING\" });\r\n    await props.history.push(\"/complaint/detail\");\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Buasri ID\",\r\n        accessor: \"buasri_id\",\r\n      },\r\n      {\r\n        Header: \"ประเภท\",\r\n        accessor: \"type\",\r\n        Cell: ({ cell }) => (\r\n          <p>\r\n            {cell.row.values.type === \"BUILDING\" ? \"อาคารและสถานที่\" : null}\r\n            {cell.row.values.type === \"LEARNING\" ? \"การเรียนการสอน\" : null}\r\n            {cell.row.values.type === \"ACTIVITY\" ? \"กิจกรรม\" : null}\r\n            {cell.row.values.type === \"SERVICES\" ? \"การบริการ\" : null}\r\n            {cell.row.values.type === \"OTHER\" ? \"อื่น ๆ\" : null}\r\n          </p>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"หัวข้อ\",\r\n        accessor: \"topic\",\r\n      },\r\n      {\r\n        Header: \"สถานะ\",\r\n        accessor: \"status\",\r\n        Cell: ({ cell }) => (\r\n          <p>\r\n            {cell.row.values.status === \"WAITING\" ? \"รอรับเรื่อง\" : null}\r\n            {cell.row.values.status === \"RECEIVED\"\r\n              ? \"รับเรื่องแล้ว รอพิจารณา\"\r\n              : null}\r\n            {cell.row.values.status === \"CONSIDERING\" ? \"กำลังพิจารณา\" : null}\r\n            {cell.row.values.status === \"EDIT\"\r\n              ? \"ต้องการข้อมูลเพิ่มเติม รอข้อมูลจากผู้แจ้ง\"\r\n              : null}\r\n            {cell.row.values.status === \"RESULT\" ? \"เสร็จสิ้นการพิจารณา\" : null}\r\n          </p>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"รายละเอียด\",\r\n        accessor: \"_id\",\r\n        Cell: ({ cell }) => (\r\n          <Button\r\n            value={[cell.row.values._id, cell.row.values.buasri_id]}\r\n            onClick={onClick}\r\n          >\r\n            รายละเอียด\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Define a default UI for filtering\r\n  function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = React.useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n      <span>\r\n        Search:{\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n          style={{\r\n            fontSize: \"1.1rem\",\r\n            border: \"0\",\r\n          }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    state: { pageIndex, pageSize },\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <br />\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              colSpan={visibleColumns.length}\r\n              style={{\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n              />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n      <Table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination>\r\n        <PaginationLink onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {\"<\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {\">\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {\">>\"}\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink disabled>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </PaginationLink>\r\n        <PaginationLink>\r\n          <Label>| Go to page:</Label>{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: \"100px\" }}\r\n          />\r\n        </PaginationLink>{\" \"}\r\n        <PaginationLink>\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </PaginationLink>\r\n      </Pagination>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { getdetail_list })(MainTableUser));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\FormButton.js",["440","441","442","443","444"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nconst FormButton = (props) => {\r\n  const [modal, setmodal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const toggle = () => {\r\n    setmodal(!modal);\r\n  };\r\n\r\n  const GoFormPage = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"PAGE_LOADING\" });\r\n    props.history.push(\"/complaint/form\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button name=\"button\" color=\"dark\" onClick={toggle}>\r\n        แจ้งเรื่องร้องเรียน\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          หลักเกณฑ์ในการรับเรื่องร้องเรียน\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <ul>\r\n            <li>\r\n              ใช้ถ้อยคำหรือข้อความที่สุภาพ และต้องมี\r\n              <ul>\r\n                <li>\r\n                  ชื่อ ที่อยู่ หมายเลขโทรศัพท์ หรือ อีเมล์\r\n                  ที่สามารถติดต่อถึงผู้ร้องเรียนหรือร้องทุกข์ได้\r\n                </li>\r\n                <li>\r\n                  ข้อเท็จจริง หรือ\r\n                  พฤติการณ์ของเรื่องที่ร้องเรียนได้อย่างชัดเจนว่าได้รับความเดือดร้อนหรือเสียหายอย่างไร\r\n                  ต้องการให้แก้ไข\r\n                </li>\r\n                <li>\r\n                  ระบุ เวลา สถานที่ พยาน เอกสาร พยานวัตถุ และพยานบุคคล (ถ้ามี)\r\n                  ให้ชัดเจน\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              ข้อร้องเรียนต้องเป็นเรื่องจริงที่มีมูลเหตุ\r\n              มิได้หวังสร้างกระแสหรือสร้างข่าวที่เสียหายต่อบุคคลอื่นหรือหน่วยงานต่างๆ\r\n              ที่เกี่ยวข้อง\r\n            </li>\r\n            <li>\r\n              การใช้บริการร้องเรียนนั้น ต้องสามารถติดต่อกลับไปยังผู้ใช้บริการได้\r\n              เพื่อยืนยันว่ามีตัวตนจริง\r\n              ไม่ได้สร้างเรื่องเพื่อกล่าวหาบุคคลอื่นหรือหน่วยงานต่าง ๆ\r\n              ให้เกิดความเสียหาย\r\n            </li>\r\n            <li>\r\n              ข้อร้องเรียนที่มีข้อมูลไม่ครบถ้วน ไม่เพียงพอ\r\n              หรือไม่สามารถหาข้อมูลเพิ่มเติมได้ในการดำเนินการตรวจสอบ สืบสวน\r\n              สอบสวน ข้อเท็จจริง ตามรายละเอียดที่กล่าวมาในข้อที่ 1 นั้น\r\n              ให้ยุติเรื่อง\r\n            </li>\r\n          </ul>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button name=\"button\" color=\"dark\" onClick={GoFormPage}>\r\n            ยอมรับ\r\n          </Button>\r\n          <Button name=\"button\" color=\"warning\" onClick={toggle}>\r\n            ไม่ยอมรับ\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, null)(FormButton));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\main\\UserPage\\AdminTable.js",["445","446","447","448","449","450","451","452","453","454"],"import React, { useState, useMemo, Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Pagination,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport depJSON from \"../../../utilis/typedep.json\";\r\nimport userJSON from \"../../../utilis/typeuser.json\";\r\nimport { getServiceUser } from \"../../../actions/main/serviceAction\";\r\n\r\nconst AdminTable = (props) => {\r\n  const list = useSelector((state) => state.main.list.userlist);\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n\r\n  AdminTable.propTypes = {\r\n    getServiceUser: PropTypes.func.isRequired,\r\n  };\r\n  const { getServiceUser } = props;\r\n  useEffect(() => {\r\n    if (list) {\r\n      setData(list);\r\n    }\r\n  }, [list]);\r\n\r\n  const onClick = async (e) => {\r\n    const getValue = await e.target.value.split(\",\");\r\n    const Detail = await {\r\n      token: token,\r\n      id: getValue[0],\r\n      buasri_id: getValue[1],\r\n    };\r\n    // console.log(Detail);\r\n    await getServiceUser(Detail);\r\n    await dispatch({ type: \"PAGE_LOADING\" });\r\n    await props.history.push(\"/users/active\");\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Buasri ID\",\r\n        accessor: \"buasri_id\",\r\n      },\r\n      {\r\n        Header: \"ชื่อ - นามสกุล\",\r\n        accessor: (name) => `${name.firstname} ${name.lastname}`,\r\n      },\r\n      {\r\n        Header: \"ประเภทผู้ใช้\",\r\n        accessor: \"type\",\r\n        Cell: ({ cell }) => (\r\n          <Fragment>\r\n            {userJSON.map((usermap) => {\r\n              if (usermap.type === cell.row.values.type) {\r\n                return <span key={usermap.type}>{usermap.name}</span>;\r\n              }\r\n            })}\r\n          </Fragment>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"สังกัด\",\r\n        accessor: \"dep\",\r\n        Cell: ({ cell }) => (\r\n          <Fragment>\r\n            {depJSON.map((depmap) => {\r\n              if (depmap.currentNameEN === cell.row.values.dep) {\r\n                return (\r\n                  <span key={depmap.currentNameEN}>{depmap.currentNameTH}</span>\r\n                );\r\n              }\r\n            })}\r\n          </Fragment>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"เลือก\",\r\n        accessor: \"_id\",\r\n        Cell: ({ cell }) => (\r\n          <Button\r\n            value={[cell.row.values._id, cell.row.values.buasri_id]}\r\n            onClick={onClick}\r\n          >\r\n            คลิก\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <br />\r\n      <Row>\r\n        <Table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { getServiceUser })(AdminTable));\r\n","D:\\E-Service\\Client_E-Service\\src\\components\\Page\\complaint\\FormPage.js",["455","456","457","458","459"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  CustomInput,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport { COMPLAINT_CLEAN_TRIGGER } from \"../../../type/complaint/type\";\r\nimport { PAGE_LOADING } from \"../../../type/main/type\";\r\nimport BackComplaintPage from \"../../complaint/BackComplaintPage\";\r\n\r\nimport {\r\n  uploadfile,\r\n  newlist as sendNewList,\r\n} from \"../../../actions/complaint/formAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ComplaintFormPage = (props) => {\r\n  const { handleSubmit, register, watch } = useForm();\r\n  const user = useSelector((state) => state.complaint.auth.user);\r\n  const token = useSelector((state) => state.main.auth.token);\r\n  const addlist = useSelector((state) => state.complaint.trigger.addlist);\r\n  const dispatch = useDispatch();\r\n\r\n  // UploadFile\r\n  const [LabelFile, setLabelFile] = useState(\"Choose File\");\r\n  const [CheckFile, setCheckFile] = useState(false);\r\n  const [CheckFileCorrect, setCheckFileCorrect] = useState(false);\r\n  const [CheckNoFile, setCheckNoFile] = useState(true);\r\n  const [mergeName, setMergeName] = useState(\"\");\r\n  const [filePath, setfilePath] = useState(\"\");\r\n  const [Image, setImage] = useState({\r\n    preview: \"\",\r\n    raw: \"\",\r\n  });\r\n\r\n  ComplaintFormPage.propTypes = {\r\n    uploadfile: PropTypes.func.isRequired,\r\n    sendNewList: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const { uploadfile, sendNewList } = props;\r\n\r\n  // check addlist success\r\n  useEffect(() => {\r\n    if (addlist) {\r\n      const checkAddlist = async () => {\r\n        await alert(\"เพิ่มรายการสำเร็จ\");\r\n        await dispatch({ type: COMPLAINT_CLEAN_TRIGGER });\r\n\r\n        await props.history.push(\"/complaint\");\r\n        await dispatch({ type: PAGE_LOADING });\r\n      };\r\n      checkAddlist();\r\n    }\r\n  }, [addlist]);\r\n\r\n  const onChange = (e) => {\r\n    const { name } = e.target;\r\n    if (name === \"fileupload\") {\r\n      if (e.target.files.length) {\r\n        setCheckFile(true);\r\n        setCheckNoFile(false);\r\n        setImage({\r\n          preview: URL.createObjectURL(e.target.files[0]),\r\n          raw: e.target.files[0],\r\n        });\r\n      } else {\r\n        setImage({\r\n          preview: \"\",\r\n          raw: \"\",\r\n        });\r\n        setCheckFile(false);\r\n        setMergeName(\"\");\r\n        setfilePath(\"\");\r\n        setCheckFileCorrect(false);\r\n        setCheckNoFile(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // mergeName\r\n  useEffect(() => {\r\n    const timenow = Date.now();\r\n    const setImageName = async () => {\r\n      if ((await Image.raw.type) === \"image/png\") {\r\n        await setMergeName(timenow + \".png\");\r\n        await setCheckFileCorrect(true);\r\n      } else if ((await Image.raw.type) === \"image/jpeg\") {\r\n        await setMergeName(timenow + \".jpg\");\r\n        await setCheckFileCorrect(true);\r\n      } else if ((await Image.raw.type) === \"image/gif\") {\r\n        await setMergeName(timenow + \".gif\");\r\n        await setCheckFileCorrect(true);\r\n      } else {\r\n        await setCheckFileCorrect(false);\r\n      }\r\n    };\r\n    setImageName();\r\n  }, [Image]);\r\n\r\n  // create name upload\r\n  useEffect(() => {\r\n    const setImagePath = async () => {\r\n      if (await mergeName) {\r\n        await setfilePath(\"/uploads/\" + user.buasri_id + \"/\" + mergeName);\r\n      }\r\n    };\r\n    setImagePath();\r\n    // eslint-disable-next-line\r\n  }, [mergeName]);\r\n\r\n  // ล้างรูป Upload\r\n  const cancelUpload = (e) => {\r\n    e.preventDefault();\r\n    setImage({\r\n      preview: \"\",\r\n      raw: \"\",\r\n    });\r\n    setCheckFile(false);\r\n    setMergeName(\"\");\r\n    setfilePath(\"\");\r\n    setCheckFileCorrect(false);\r\n    setCheckNoFile(true);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    async function upload() {\r\n      if (CheckFile) {\r\n        if (Image) {\r\n          if (\r\n            Image.raw.type === \"image/png\" ||\r\n            Image.raw.type === \"image/jpeg\" ||\r\n            Image.raw.type === \"image/gif\"\r\n          ) {\r\n            const NewUploadFile = new FormData();\r\n            await NewUploadFile.append(\"file\", Image.raw, mergeName);\r\n            await NewUploadFile.append(\"buasri_id\", user.buasri_id);\r\n            await NewUploadFile.append(\"filePath\", filePath);\r\n            await uploadfile(NewUploadFile, token);\r\n          } else {\r\n            await alert(\"ประเภทไฟล์ของคุณไม่ถูกต้อง\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // await console.log(e.email);\r\n    if (user.position === \"ADMIN\") {\r\n      const newList = await {\r\n        token: token,\r\n        buasri_id: user.buasri_id,\r\n        member: e.member,\r\n        email: e.email,\r\n        phone: e.phone,\r\n        type: e.type,\r\n        topic: e.topic,\r\n        detail: e.detail,\r\n        status: \"WAITING\",\r\n        file_name: mergeName,\r\n        file_path: filePath,\r\n      };\r\n      await sendNewList(newList);\r\n      await upload();\r\n    } else {\r\n      const newList = await {\r\n        token: token,\r\n        buasri_id: user.buasri_id,\r\n        member: \"MEMBER\",\r\n        email: e.email,\r\n        phone: e.phone,\r\n        type: e.type,\r\n        topic: e.topic,\r\n        detail: e.detail,\r\n        status: \"WAITING\",\r\n        file_name: mergeName,\r\n        file_path: filePath,\r\n      };\r\n      await sendNewList(newList);\r\n      await upload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <BackComplaintPage />\r\n        <h4>\r\n          <b>แบบฟอร์มการร้องเรียน</b>\r\n        </h4>\r\n\r\n        <br />\r\n      </Container>\r\n      <Container>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <p className=\"text-danger\">\r\n              แบบฟอร์มนี้มีไว้สำหรับการรับข้อร้องเรียนต่างๆ\r\n              โดยข้อมูลต่างๆที่ท่านกรอกผ่านแบบฟอร์มนี้ จะถูกเก็บเป็นความลับ ชื่อ\r\n              เบอร์โทรศัพท์ และอีเมล์ ของท่านมีไว้เพื่อติดต่อกลับ\r\n              ทางคณะผู้บริหารจะนำข้อร้องเรียนและข้อเสนอแนะไปปรับปรุงการให้บริการของคณะวิทยาศาสตร์ต่อไป\r\n              ขอขอบพระคุณสำหรับความร่วมมือ{\" \"}\r\n            </p>\r\n            <p>\r\n              **หมายเหตุ:\r\n              ท่านจำเป็นต้องกรอกข้อมูลทุกข้อให้ครับถ้วนจึงถือเป็นข้อร้องเรียน\r\n            </p>\r\n          </FormGroup>\r\n          {user.position === \"ADMIN\" ? (\r\n            <Fragment>\r\n              <FormGroup>\r\n                <Label for=\"email\">*Email:</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  innerRef={register}\r\n                  placeholder=\"E-mail ผู้แจ้ง\"\r\n                ></Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"member\">*ประเภทผู้ร้องเรียน:</Label>\r\n                <Input type=\"select\" name=\"member\" innerRef={register}>\r\n                  <option value=\"GUEST\">บุคคลภายนอกมหาวิทยาลัย</option>\r\n                  <option value=\"MEMBER\">บุคคลภายในมหาวิทยาลัย</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <FormGroup>\r\n                <Label for=\"email\">*Email:</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder={user.email}\r\n                  innerRef={register}\r\n                  value={user.email}\r\n                  readOnly\r\n                ></Input>\r\n              </FormGroup>\r\n            </Fragment>\r\n          )}\r\n          <FormGroup>\r\n            <Label for=\"phone\">เบอร์ติดต่อ:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              innerRef={register}\r\n              placeholder=\"เบอร์ที่ใช้ติดต่อ (สูงสุด 20 ตัวอักษร)\"\r\n              maxLength=\"20\"\r\n            />\r\n          </FormGroup>\r\n          {/* ประเภทการร้องเรียน */}\r\n          <FormGroup tag=\"fieldset\">\r\n            <Label>*ประเภทการร้องเรียน:</Label>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"type\"\r\n                  innerRef={register}\r\n                  value=\"BUILDING\"\r\n                  required\r\n                />{\" \"}\r\n                อาคารและสถานที่\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"type\"\r\n                  innerRef={register}\r\n                  value=\"LEARNING\"\r\n                  required\r\n                />{\" \"}\r\n                การเรียนการสอน\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"type\"\r\n                  innerRef={register}\r\n                  value=\"ACTIVITY\"\r\n                  required\r\n                />{\" \"}\r\n                กิจกรรม\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"type\"\r\n                  innerRef={register}\r\n                  value=\"SERVICES\"\r\n                  required\r\n                />{\" \"}\r\n                การบริการ\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"type\"\r\n                  innerRef={register}\r\n                  value=\"OTHER\"\r\n                  required\r\n                />{\" \"}\r\n                อื่น ๆ\r\n              </Label>\r\n            </FormGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"topic\">*หัวข้อ:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"topic\"\r\n              innerRef={register}\r\n              placeholder=\"หัวข้อที่ต้องการร้องเรียน (สูงสุด 80 ตัวอักษร)\"\r\n              maxLength=\"80\"\r\n              required\r\n            />\r\n          </FormGroup>\r\n          {/*  */}\r\n          <FormGroup>\r\n            <Label for=\"detail\">*รายละเอียด:</Label>\r\n            <Input\r\n              type=\"textarea\"\r\n              name=\"detail\"\r\n              innerRef={register}\r\n              placeholder=\"อธิบายรายละเอียดที่ต้องการร้องเรียน\"\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"uploadfile\">\r\n              Upload File: (เฉพาะไฟล์รูปภาพ PNG, JPG และ GIF เท่านั้น)\r\n            </Label>\r\n            <CustomInput\r\n              type=\"file\"\r\n              id=\"fileupload\"\r\n              name=\"fileupload\"\r\n              label={LabelFile}\r\n              onChange={onChange}\r\n              accept=\"image/PNG, image/JPEG, image/GIF\"\r\n            />\r\n            {Image.preview ? (\r\n              <Fragment>\r\n                <br />\r\n                <br />\r\n                <Button color={\"danger\"} onClick={cancelUpload}>\r\n                  ยกเลิก Upload\r\n                </Button>\r\n                <br />\r\n                <br />\r\n                <img src={Image.preview} alt=\"\" width=\"300\" />\r\n              </Fragment>\r\n            ) : null}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"dark\">Submit</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  connect(null, { uploadfile, sendNewList })(ComplaintFormPage)\r\n);\r\n","D:\\E-Service\\Client_E-Service\\src\\utilis\\delay.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\authAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\listAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\registerAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\type\\complaint\\type.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\BackComplaintPage.js",[],"D:\\E-Service\\Client_E-Service\\src\\components\\complaint\\UpdateStatusModal.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\formAction.js",[],"D:\\E-Service\\Client_E-Service\\src\\actions\\complaint\\updateAction.js",[],{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","severity":1,"message":"465","line":3,"column":25,"nodeType":"466","messageId":"467","endLine":3,"endColumn":32},{"ruleId":"468","severity":1,"message":"469","line":28,"column":11,"nodeType":"470","endLine":31,"endColumn":12},{"ruleId":"464","severity":1,"message":"471","line":13,"column":3,"nodeType":"466","messageId":"467","endLine":13,"endColumn":10},{"ruleId":"464","severity":1,"message":"472","line":23,"column":10,"nodeType":"466","messageId":"467","endLine":23,"endColumn":19},{"ruleId":"473","severity":1,"message":"474","line":60,"column":6,"nodeType":"475","endLine":60,"endColumn":18,"suggestions":"476"},{"ruleId":"464","severity":1,"message":"477","line":8,"column":3,"nodeType":"466","messageId":"467","endLine":8,"endColumn":17},{"ruleId":"464","severity":1,"message":"478","line":4,"column":3,"nodeType":"466","messageId":"467","endLine":4,"endColumn":19},{"ruleId":"464","severity":1,"message":"479","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"480","line":3,"column":17,"nodeType":"466","messageId":"467","endLine":3,"endColumn":22},{"ruleId":"464","severity":1,"message":"481","line":3,"column":32,"nodeType":"466","messageId":"467","endLine":3,"endColumn":42},{"ruleId":"464","severity":1,"message":"482","line":3,"column":44,"nodeType":"466","messageId":"467","endLine":3,"endColumn":58},{"ruleId":"473","severity":1,"message":"483","line":58,"column":6,"nodeType":"475","endLine":58,"endColumn":19,"suggestions":"484"},{"ruleId":"473","severity":1,"message":"485","line":84,"column":5,"nodeType":"475","endLine":84,"endColumn":7,"suggestions":"486"},{"ruleId":"464","severity":1,"message":"487","line":124,"column":5,"nodeType":"466","messageId":"467","endLine":124,"endColumn":9},{"ruleId":"464","severity":1,"message":"488","line":125,"column":5,"nodeType":"466","messageId":"467","endLine":125,"endColumn":20},{"ruleId":"464","severity":1,"message":"489","line":126,"column":5,"nodeType":"466","messageId":"467","endLine":126,"endColumn":16},{"ruleId":"464","severity":1,"message":"490","line":127,"column":5,"nodeType":"466","messageId":"467","endLine":127,"endColumn":16},{"ruleId":"464","severity":1,"message":"491","line":128,"column":5,"nodeType":"466","messageId":"467","endLine":128,"endColumn":14},{"ruleId":"464","severity":1,"message":"492","line":129,"column":5,"nodeType":"466","messageId":"467","endLine":129,"endColumn":13},{"ruleId":"464","severity":1,"message":"493","line":130,"column":5,"nodeType":"466","messageId":"467","endLine":130,"endColumn":13},{"ruleId":"464","severity":1,"message":"494","line":131,"column":5,"nodeType":"466","messageId":"467","endLine":131,"endColumn":17},{"ruleId":"464","severity":1,"message":"495","line":132,"column":5,"nodeType":"466","messageId":"467","endLine":132,"endColumn":16},{"ruleId":"464","severity":1,"message":"496","line":134,"column":14,"nodeType":"466","messageId":"467","endLine":134,"endColumn":23},{"ruleId":"464","severity":1,"message":"497","line":134,"column":25,"nodeType":"466","messageId":"467","endLine":134,"endColumn":33},{"ruleId":"464","severity":1,"message":"479","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"480","line":3,"column":17,"nodeType":"466","messageId":"467","endLine":3,"endColumn":22},{"ruleId":"464","severity":1,"message":"481","line":3,"column":32,"nodeType":"466","messageId":"467","endLine":3,"endColumn":42},{"ruleId":"464","severity":1,"message":"482","line":3,"column":44,"nodeType":"466","messageId":"467","endLine":3,"endColumn":58},{"ruleId":"473","severity":1,"message":"483","line":58,"column":6,"nodeType":"475","endLine":58,"endColumn":19,"suggestions":"498"},{"ruleId":"473","severity":1,"message":"485","line":98,"column":5,"nodeType":"475","endLine":98,"endColumn":7,"suggestions":"499"},{"ruleId":"464","severity":1,"message":"487","line":138,"column":5,"nodeType":"466","messageId":"467","endLine":138,"endColumn":9},{"ruleId":"464","severity":1,"message":"488","line":139,"column":5,"nodeType":"466","messageId":"467","endLine":139,"endColumn":20},{"ruleId":"464","severity":1,"message":"489","line":140,"column":5,"nodeType":"466","messageId":"467","endLine":140,"endColumn":16},{"ruleId":"464","severity":1,"message":"490","line":141,"column":5,"nodeType":"466","messageId":"467","endLine":141,"endColumn":16},{"ruleId":"464","severity":1,"message":"491","line":142,"column":5,"nodeType":"466","messageId":"467","endLine":142,"endColumn":14},{"ruleId":"464","severity":1,"message":"492","line":143,"column":5,"nodeType":"466","messageId":"467","endLine":143,"endColumn":13},{"ruleId":"464","severity":1,"message":"493","line":144,"column":5,"nodeType":"466","messageId":"467","endLine":144,"endColumn":13},{"ruleId":"464","severity":1,"message":"494","line":145,"column":5,"nodeType":"466","messageId":"467","endLine":145,"endColumn":17},{"ruleId":"464","severity":1,"message":"495","line":146,"column":5,"nodeType":"466","messageId":"467","endLine":146,"endColumn":16},{"ruleId":"464","severity":1,"message":"496","line":148,"column":14,"nodeType":"466","messageId":"467","endLine":148,"endColumn":23},{"ruleId":"464","severity":1,"message":"497","line":148,"column":25,"nodeType":"466","messageId":"467","endLine":148,"endColumn":33},{"ruleId":"464","severity":1,"message":"479","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"480","line":3,"column":17,"nodeType":"466","messageId":"467","endLine":3,"endColumn":22},{"ruleId":"464","severity":1,"message":"481","line":3,"column":32,"nodeType":"466","messageId":"467","endLine":3,"endColumn":42},{"ruleId":"464","severity":1,"message":"482","line":3,"column":44,"nodeType":"466","messageId":"467","endLine":3,"endColumn":58},{"ruleId":"473","severity":1,"message":"483","line":58,"column":6,"nodeType":"475","endLine":58,"endColumn":19,"suggestions":"500"},{"ruleId":"473","severity":1,"message":"485","line":98,"column":5,"nodeType":"475","endLine":98,"endColumn":7,"suggestions":"501"},{"ruleId":"464","severity":1,"message":"487","line":138,"column":5,"nodeType":"466","messageId":"467","endLine":138,"endColumn":9},{"ruleId":"464","severity":1,"message":"488","line":139,"column":5,"nodeType":"466","messageId":"467","endLine":139,"endColumn":20},{"ruleId":"464","severity":1,"message":"489","line":140,"column":5,"nodeType":"466","messageId":"467","endLine":140,"endColumn":16},{"ruleId":"464","severity":1,"message":"490","line":141,"column":5,"nodeType":"466","messageId":"467","endLine":141,"endColumn":16},{"ruleId":"464","severity":1,"message":"491","line":142,"column":5,"nodeType":"466","messageId":"467","endLine":142,"endColumn":14},{"ruleId":"464","severity":1,"message":"492","line":143,"column":5,"nodeType":"466","messageId":"467","endLine":143,"endColumn":13},{"ruleId":"464","severity":1,"message":"493","line":144,"column":5,"nodeType":"466","messageId":"467","endLine":144,"endColumn":13},{"ruleId":"464","severity":1,"message":"494","line":145,"column":5,"nodeType":"466","messageId":"467","endLine":145,"endColumn":17},{"ruleId":"464","severity":1,"message":"495","line":146,"column":5,"nodeType":"466","messageId":"467","endLine":146,"endColumn":16},{"ruleId":"464","severity":1,"message":"496","line":148,"column":14,"nodeType":"466","messageId":"467","endLine":148,"endColumn":23},{"ruleId":"464","severity":1,"message":"497","line":148,"column":25,"nodeType":"466","messageId":"467","endLine":148,"endColumn":33},{"ruleId":"464","severity":1,"message":"479","line":1,"column":48,"nodeType":"466","messageId":"467","endLine":1,"endColumn":55},{"ruleId":"464","severity":1,"message":"502","line":2,"column":19,"nodeType":"466","messageId":"467","endLine":2,"endColumn":30},{"ruleId":"464","severity":1,"message":"503","line":5,"column":3,"nodeType":"466","messageId":"467","endLine":5,"endColumn":8},{"ruleId":"464","severity":1,"message":"504","line":11,"column":3,"nodeType":"466","messageId":"467","endLine":11,"endColumn":11},{"ruleId":"473","severity":1,"message":"505","line":49,"column":6,"nodeType":"475","endLine":49,"endColumn":14,"suggestions":"506"},{"ruleId":"473","severity":1,"message":"507","line":92,"column":6,"nodeType":"475","endLine":92,"endColumn":14,"suggestions":"508"},{"ruleId":"464","severity":1,"message":"509","line":11,"column":8,"nodeType":"466","messageId":"467","endLine":11,"endColumn":19},{"ruleId":"473","severity":1,"message":"483","line":43,"column":6,"nodeType":"475","endLine":43,"endColumn":22,"suggestions":"510"},{"ruleId":"511","severity":1,"message":"512","line":68,"column":37,"nodeType":"513","messageId":"514","endLine":68,"endColumn":39},{"ruleId":"473","severity":1,"message":"515","line":85,"column":6,"nodeType":"475","endLine":85,"endColumn":14,"suggestions":"516"},{"ruleId":"473","severity":1,"message":"483","line":101,"column":5,"nodeType":"475","endLine":101,"endColumn":13,"suggestions":"517"},{"ruleId":"464","severity":1,"message":"479","line":4,"column":3,"nodeType":"466","messageId":"467","endLine":4,"endColumn":10},{"ruleId":"464","severity":1,"message":"518","line":6,"column":3,"nodeType":"466","messageId":"467","endLine":6,"endColumn":12},{"ruleId":"464","severity":1,"message":"519","line":37,"column":35,"nodeType":"466","messageId":"467","endLine":37,"endColumn":40},{"ruleId":"464","severity":1,"message":"520","line":52,"column":10,"nodeType":"466","messageId":"467","endLine":52,"endColumn":16},{"ruleId":"464","severity":1,"message":"521","line":53,"column":18,"nodeType":"466","messageId":"467","endLine":53,"endColumn":27},{"ruleId":"464","severity":1,"message":"522","line":82,"column":21,"nodeType":"466","messageId":"467","endLine":82,"endColumn":33},{"ruleId":"464","severity":1,"message":"523","line":84,"column":10,"nodeType":"466","messageId":"467","endLine":84,"endColumn":26},{"ruleId":"473","severity":1,"message":"483","line":118,"column":6,"nodeType":"475","endLine":118,"endColumn":16,"suggestions":"524"},{"ruleId":"464","severity":1,"message":"525","line":2,"column":19,"nodeType":"466","messageId":"467","endLine":2,"endColumn":30},{"ruleId":"464","severity":1,"message":"526","line":4,"column":20,"nodeType":"466","messageId":"467","endLine":4,"endColumn":26},{"ruleId":"464","severity":1,"message":"527","line":6,"column":3,"nodeType":"466","messageId":"467","endLine":6,"endColumn":8},{"ruleId":"464","severity":1,"message":"528","line":7,"column":3,"nodeType":"466","messageId":"467","endLine":7,"endColumn":9},{"ruleId":"464","severity":1,"message":"529","line":8,"column":3,"nodeType":"466","messageId":"467","endLine":8,"endColumn":14},{"ruleId":"464","severity":1,"message":"530","line":14,"column":7,"nodeType":"466","messageId":"467","endLine":14,"endColumn":13},{"ruleId":"464","severity":1,"message":"531","line":134,"column":9,"nodeType":"466","messageId":"467","endLine":134,"endColumn":19},{"ruleId":"464","severity":1,"message":"531","line":169,"column":9,"nodeType":"466","messageId":"467","endLine":169,"endColumn":19},{"ruleId":"464","severity":1,"message":"532","line":2,"column":10,"nodeType":"466","messageId":"467","endLine":2,"endColumn":22},{"ruleId":"464","severity":1,"message":"533","line":5,"column":3,"nodeType":"466","messageId":"467","endLine":5,"endColumn":21},{"ruleId":"464","severity":1,"message":"534","line":3,"column":8,"nodeType":"466","messageId":"467","endLine":3,"endColumn":16},{"ruleId":"464","severity":1,"message":"535","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":15},{"ruleId":"464","severity":1,"message":"536","line":12,"column":3,"nodeType":"466","messageId":"467","endLine":12,"endColumn":14},{"ruleId":"464","severity":1,"message":"537","line":30,"column":9,"nodeType":"466","messageId":"467","endLine":30,"endColumn":17},{"ruleId":"464","severity":1,"message":"538","line":40,"column":21,"nodeType":"466","messageId":"467","endLine":40,"endColumn":33},{"ruleId":"464","severity":1,"message":"539","line":5,"column":3,"nodeType":"466","messageId":"467","endLine":5,"endColumn":19},{"ruleId":"464","severity":1,"message":"530","line":11,"column":7,"nodeType":"466","messageId":"467","endLine":11,"endColumn":13},{"ruleId":"464","severity":1,"message":"540","line":68,"column":9,"nodeType":"466","messageId":"467","endLine":68,"endColumn":20},{"ruleId":"464","severity":1,"message":"534","line":3,"column":8,"nodeType":"466","messageId":"467","endLine":3,"endColumn":16},{"ruleId":"464","severity":1,"message":"535","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":15},{"ruleId":"464","severity":1,"message":"541","line":50,"column":10,"nodeType":"466","messageId":"467","endLine":50,"endColumn":21},{"ruleId":"464","severity":1,"message":"542","line":1,"column":17,"nodeType":"466","messageId":"467","endLine":1,"endColumn":25},{"ruleId":"464","severity":1,"message":"479","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"543","line":1,"column":46,"nodeType":"466","messageId":"467","endLine":1,"endColumn":55},{"ruleId":"473","severity":1,"message":"485","line":91,"column":5,"nodeType":"475","endLine":91,"endColumn":7,"suggestions":"544"},{"ruleId":"464","severity":1,"message":"487","line":131,"column":5,"nodeType":"466","messageId":"467","endLine":131,"endColumn":9},{"ruleId":"464","severity":1,"message":"543","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":36},{"ruleId":"464","severity":1,"message":"502","line":3,"column":19,"nodeType":"466","messageId":"467","endLine":3,"endColumn":30},{"ruleId":"464","severity":1,"message":"545","line":4,"column":8,"nodeType":"466","messageId":"467","endLine":4,"endColumn":17},{"ruleId":"473","severity":1,"message":"546","line":69,"column":6,"nodeType":"475","endLine":69,"endColumn":14,"suggestions":"547"},{"ruleId":"464","severity":1,"message":"542","line":1,"column":17,"nodeType":"466","messageId":"467","endLine":1,"endColumn":25},{"ruleId":"464","severity":1,"message":"479","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"543","line":1,"column":46,"nodeType":"466","messageId":"467","endLine":1,"endColumn":55},{"ruleId":"473","severity":1,"message":"485","line":92,"column":5,"nodeType":"475","endLine":92,"endColumn":7,"suggestions":"548"},{"ruleId":"464","severity":1,"message":"487","line":132,"column":5,"nodeType":"466","messageId":"467","endLine":132,"endColumn":9},{"ruleId":"464","severity":1,"message":"525","line":2,"column":19,"nodeType":"466","messageId":"467","endLine":2,"endColumn":30},{"ruleId":"464","severity":1,"message":"526","line":4,"column":20,"nodeType":"466","messageId":"467","endLine":4,"endColumn":26},{"ruleId":"464","severity":1,"message":"527","line":6,"column":3,"nodeType":"466","messageId":"467","endLine":6,"endColumn":8},{"ruleId":"464","severity":1,"message":"528","line":7,"column":3,"nodeType":"466","messageId":"467","endLine":7,"endColumn":9},{"ruleId":"464","severity":1,"message":"529","line":8,"column":3,"nodeType":"466","messageId":"467","endLine":8,"endColumn":14},{"ruleId":"464","severity":1,"message":"479","line":1,"column":27,"nodeType":"466","messageId":"467","endLine":1,"endColumn":34},{"ruleId":"464","severity":1,"message":"480","line":6,"column":3,"nodeType":"466","messageId":"467","endLine":6,"endColumn":8},{"ruleId":"464","severity":1,"message":"481","line":8,"column":3,"nodeType":"466","messageId":"467","endLine":8,"endColumn":13},{"ruleId":"464","severity":1,"message":"482","line":9,"column":3,"nodeType":"466","messageId":"467","endLine":9,"endColumn":17},{"ruleId":"464","severity":1,"message":"549","line":14,"column":3,"nodeType":"466","messageId":"467","endLine":14,"endColumn":18},{"ruleId":"464","severity":1,"message":"550","line":15,"column":3,"nodeType":"466","messageId":"467","endLine":15,"endColumn":19},{"ruleId":"464","severity":1,"message":"551","line":16,"column":3,"nodeType":"466","messageId":"467","endLine":16,"endColumn":16},{"ruleId":"511","severity":1,"message":"512","line":68,"column":37,"nodeType":"513","messageId":"514","endLine":68,"endColumn":39},{"ruleId":"511","severity":1,"message":"512","line":81,"column":35,"nodeType":"513","messageId":"514","endLine":81,"endColumn":37},{"ruleId":"473","severity":1,"message":"485","line":104,"column":5,"nodeType":"475","endLine":104,"endColumn":7,"suggestions":"552"},{"ruleId":"464","severity":1,"message":"519","line":25,"column":35,"nodeType":"466","messageId":"467","endLine":25,"endColumn":40},{"ruleId":"464","severity":1,"message":"522","line":32,"column":21,"nodeType":"466","messageId":"467","endLine":32,"endColumn":33},{"ruleId":"464","severity":1,"message":"523","line":34,"column":10,"nodeType":"466","messageId":"467","endLine":34,"endColumn":26},{"ruleId":"464","severity":1,"message":"553","line":35,"column":10,"nodeType":"466","messageId":"467","endLine":35,"endColumn":21},{"ruleId":"473","severity":1,"message":"483","line":62,"column":6,"nodeType":"475","endLine":62,"endColumn":15,"suggestions":"554"},"no-native-reassign",["555"],"no-negated-in-lhs",["556"],"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'NavItem' is defined but never used.","'START_APP' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkToken', 'clearErrors', and 'loadUser'. Either include them or remove the dependency array.","ArrayExpression",["557"],"'LOGOUT_SUCCESS' is defined but never used.","'returnErrorsLdap' is defined but never used.","'useMemo' is defined but never used.","'Label' is defined but never used.","'Pagination' is defined but never used.","'PaginationLink' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["558"],"React Hook React.useMemo has a missing dependency: 'onClick'. Either include it or remove the dependency array.",["559"],"'page' is assigned a value but never used.","'canPreviousPage' is assigned a value but never used.","'canNextPage' is assigned a value but never used.","'pageOptions' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'gotoPage' is assigned a value but never used.","'nextPage' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.",["560"],["561"],["562"],["563"],"'useDispatch' is defined but never used.","'Table' is defined but never used.","'FormText' is defined but never used.","React Hook useEffect has a missing dependency: 'levelStart'. Either include it or remove the dependency array.",["564"],"React Hook useEffect has missing dependencies: 'props.history' and 'user'. Either include them or remove the dependency array.",["565"],"'NewLineToBr' is defined but never used.",["566"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useMemo has missing dependencies: 'conResearch' and 'props.history'. Either include them or remove the dependency array.",["567"],["568"],"'createRef' is defined but never used.","'watch' is assigned a value but never used.","'Level0' is assigned a value but never used.","'setLevel1' is assigned a value but never used.","'setLabelFile' is assigned a value but never used.","'CheckFileCorrect' is assigned a value but never used.",["569"],"'useSelector' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useLocation' is defined but never used.","'conphp' is assigned a value but never used.","'email_user' is assigned a value but never used.","'returnErrors' is defined but never used.","'RESEARCH_AUTH_FAIL' is defined but never used.","'ReactDOM' is defined but never used.","'Input' is defined but never used.","'CustomInput' is defined but never used.","'dispatch' is assigned a value but never used.","'setdisButton' is assigned a value but never used.","'GET_USER_SERVICE' is defined but never used.","'configemail' is assigned a value but never used.","'activefirst' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["570"],"'PropTypes' is defined but never used.","React Hook useMemo has a missing dependency: 'conComplaint'. Either include it or remove the dependency array.",["571"],["572"],"'useGlobalFilter' is defined but never used.","'useAsyncDebounce' is defined but never used.","'usePagination' is defined but never used.",["573"],"'CheckNoFile' is assigned a value but never used.",["574"],"no-global-assign","no-unsafe-negation",{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"577","fix":"581"},{"desc":"579","fix":"582"},{"desc":"577","fix":"583"},{"desc":"579","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"579","fix":"597"},{"desc":"598","fix":"599"},{"desc":"579","fix":"600"},{"desc":"579","fix":"601"},{"desc":"602","fix":"603"},"Update the dependencies array to be: [checkToken, clearErrors, loadUser, startClear]",{"range":"604","text":"605"},"Update the dependencies array to be: [detail_page, dispatch, props.history]",{"range":"606","text":"607"},"Update the dependencies array to be: [onClick]",{"range":"608","text":"609"},{"range":"610","text":"607"},{"range":"611","text":"609"},{"range":"612","text":"607"},{"range":"613","text":"609"},"Update the dependencies array to be: [detail, levelStart]",{"range":"614","text":"615"},"Update the dependencies array to be: [detail, props.history, user]",{"range":"616","text":"617"},"Update the dependencies array to be: [dispatch, props.history, trigger_status]",{"range":"618","text":"619"},"Update the dependencies array to be: [conResearch, detail, props.history]",{"range":"620","text":"621"},"Update the dependencies array to be: [GoEdit, dispatch, props.history]",{"range":"622","text":"623"},"Update the dependencies array to be: [dispatch, props.history, sendForm]",{"range":"624","text":"625"},{"range":"626","text":"609"},"Update the dependencies array to be: [conComplaint, detail]",{"range":"627","text":"628"},{"range":"629","text":"609"},{"range":"630","text":"609"},"Update the dependencies array to be: [addlist, dispatch, props.history]",{"range":"631","text":"632"},[1679,1691],"[checkToken, clearErrors, loadUser, startClear]",[1598,1611],"[detail_page, dispatch, props.history]",[2228,2230],"[onClick]",[1600,1613],[2765,2767],[1598,1611],[2763,2765],[1436,1444],"[detail, levelStart]",[2587,2595],"[detail, props.history, user]",[1599,1615],"[dispatch, props.history, trigger_status]",[2720,2728],"[conResearch, detail, props.history]",[3025,3033],"[GoEdit, dispatch, props.history]",[3221,3231],"[dispatch, props.history, sendForm]",[2841,2843],[2433,2441],"[conComplaint, detail]",[2856,2858],[2779,2781],[1995,2004],"[addlist, dispatch, props.history]"]